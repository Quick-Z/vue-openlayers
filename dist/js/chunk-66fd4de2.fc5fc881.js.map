{"version":3,"sources":["webpack:///./node_modules/ol/control/ZoomSlider.js","webpack:///./src/views/zoomSlider/ZoomSlider.vue?1a03","webpack:///src/views/zoomSlider/ZoomSlider.vue","webpack:///./src/views/zoomSlider/ZoomSlider.vue?4c89","webpack:///./src/views/zoomSlider/ZoomSlider.vue","webpack:///./node_modules/ol/source/BingMaps.js","webpack:///./node_modules/ol/net.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","Direction","VERTICAL","HORIZONTAL","ZoomSlider","_super","opt_options","_this","options","element","document","createElement","render","dragListenerKeys_","currentResolution_","undefined","direction_","dragging_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","duration_","duration","className","thumbElement","setAttribute","containerElement","appendChild","addEventListener","POINTERDOWN","handleDraggerStart_","bind","POINTERMOVE","handleDraggerDrag_","POINTERUP","handleDraggerEnd_","CLICK","handleContainerClick_","setMap","map","initSlider_","container","containerWidth","offsetWidth","containerHeight","offsetHeight","containerStyle","getComputedStyle","parseFloat","thumb","thumbStyle","thumbWidth","thumbHeight","event","view","getMap","getView","relativePosition","getRelativePosition_","offsetX","offsetY","resolution","getResolutionForPosition_","zoom","getConstrainedZoom","getZoomForResolution","animateInternal","easing","target","firstElementChild","beginInteraction","clientX","style","left","clientY","top","length","drag","end","doc","getOwnerDocument","push","deltaX","deltaY","setResolution","endInteraction","forEach","setThumbPosition_","res","position","getPositionForResolution_","x","y","amount","fn","getResolutionForValueFunction","getValueForResolutionFunction","mapEvent","frameState","viewState","_vm","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","attrs","name","data","methods","initMap","Map","controls","control","layers","View","projection","center","mounted","component","quadKey","tileCoord","i","charCode","z","digits","mask","fromCharCode","join","TOS_ATTRIBUTION","BingMaps","hidpi","cacheSize","crossOrigin","imageSmoothing","opaque","reprojectionErrorThreshold","state","LOADING","tileLoadFunction","tilePixelRatio","wrapX","transition","zDirection","hidpi_","culture_","culture","maxZoom_","maxZoom","apiKey_","key","imagerySet_","imagerySet","url","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","sourceProjection","getProjection","extent","scale","tileSize","imageWidth","imageHeight","tileGrid","minZoom","zoomMin","tileUrlFunction","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","replace","pixelRatio","imageryProviders","transform_1","setAttributions","attributions","getTileGrid","getZForResolution","getTileCoordForCoordAndZ","imageryProvider","intersecting","coverageAreas","ii","coverageArea","bbox","epsg4326Extent","extent_1","attribution","setState","READY","ERROR","jsonp","callback","opt_errback","opt_callbackParam","script","cleanup","window","parentNode","removeChild","async","src","indexOf","timer","setTimeout","clearTimeout","getElementsByTagName","ResponseError","message","status","Error","ClientError","client"],"mappings":"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","file":"js/chunk-66fd4de2.fc5fc881.js","sourcesContent":["/**\n * @module ol/control/ZoomSlider\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { clamp } from '../math.js';\nimport { easeOut } from '../easing.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { stopPropagation } from '../events/Event.js';\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n    VERTICAL: 0,\n    HORIZONTAL: 1,\n};\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /** @class */ (function (_super) {\n    __extends(ZoomSlider, _super);\n    /**\n     * @param {Options} [opt_options] Zoom slider options.\n     */\n    function ZoomSlider(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n        }) || this;\n        /**\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * Will hold the current resolution of the view.\n         *\n         * @type {number|undefined}\n         * @private\n         */\n        _this.currentResolution_ = undefined;\n        /**\n         * The direction of the slider. Will be determined from actual display of the\n         * container and defaults to Direction.VERTICAL.\n         *\n         * @type {Direction}\n         * @private\n         */\n        _this.direction_ = Direction.VERTICAL;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.heightLimit_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.widthLimit_ = 0;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startX_;\n        /**\n         * @type {number|undefined}\n         * @private\n         */\n        _this.startY_;\n        /**\n         * The calculated thumb size (border box plus margins).  Set when initSlider_\n         * is called.\n         * @type {import(\"../size.js\").Size}\n         * @private\n         */\n        _this.thumbSize_ = null;\n        /**\n         * Whether the slider is initialized.\n         * @type {boolean}\n         * @private\n         */\n        _this.sliderInitialized_ = false;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n        var thumbElement = document.createElement('button');\n        thumbElement.setAttribute('type', 'button');\n        thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n        var containerElement = _this.element;\n        containerElement.className =\n            className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        containerElement.appendChild(thumbElement);\n        containerElement.addEventListener(PointerEventType.POINTERDOWN, _this.handleDraggerStart_.bind(_this), false);\n        containerElement.addEventListener(PointerEventType.POINTERMOVE, _this.handleDraggerDrag_.bind(_this), false);\n        containerElement.addEventListener(PointerEventType.POINTERUP, _this.handleDraggerEnd_.bind(_this), false);\n        containerElement.addEventListener(EventType.CLICK, _this.handleContainerClick_.bind(_this), false);\n        thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n        return _this;\n    }\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    ZoomSlider.prototype.setMap = function (map) {\n        _super.prototype.setMap.call(this, map);\n        if (map) {\n            map.render();\n        }\n    };\n    /**\n     * Initializes the slider element. This will determine and set this controls\n     * direction_ and also constrain the dragging of the thumb to always be within\n     * the bounds of the container.\n     *\n     * @return {boolean} Initialization successful\n     * @private\n     */\n    ZoomSlider.prototype.initSlider_ = function () {\n        var container = this.element;\n        var containerWidth = container.offsetWidth;\n        var containerHeight = container.offsetHeight;\n        if (containerWidth === 0 && containerHeight === 0) {\n            return (this.sliderInitialized_ = false);\n        }\n        var containerStyle = getComputedStyle(container);\n        containerWidth -=\n            parseFloat(containerStyle['paddingRight']) +\n                parseFloat(containerStyle['paddingLeft']);\n        containerHeight -=\n            parseFloat(containerStyle['paddingTop']) +\n                parseFloat(containerStyle['paddingBottom']);\n        var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n        var thumbStyle = getComputedStyle(thumb);\n        var thumbWidth = thumb.offsetWidth +\n            parseFloat(thumbStyle['marginRight']) +\n            parseFloat(thumbStyle['marginLeft']);\n        var thumbHeight = thumb.offsetHeight +\n            parseFloat(thumbStyle['marginTop']) +\n            parseFloat(thumbStyle['marginBottom']);\n        this.thumbSize_ = [thumbWidth, thumbHeight];\n        if (containerWidth > containerHeight) {\n            this.direction_ = Direction.HORIZONTAL;\n            this.widthLimit_ = containerWidth - thumbWidth;\n        }\n        else {\n            this.direction_ = Direction.VERTICAL;\n            this.heightLimit_ = containerHeight - thumbHeight;\n        }\n        return (this.sliderInitialized_ = true);\n    };\n    /**\n     * @param {PointerEvent} event The browser event to handle.\n     * @private\n     */\n    ZoomSlider.prototype.handleContainerClick_ = function (event) {\n        var view = this.getMap().getView();\n        var relativePosition = this.getRelativePosition_(event.offsetX - this.thumbSize_[0] / 2, event.offsetY - this.thumbSize_[1] / 2);\n        var resolution = this.getResolutionForPosition_(relativePosition);\n        var zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n        view.animateInternal({\n            zoom: zoom,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    /**\n     * Handle dragger start events.\n     * @param {PointerEvent} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerStart_ = function (event) {\n        if (!this.dragging_ && event.target === this.element.firstElementChild) {\n            var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n            this.getMap().getView().beginInteraction();\n            this.startX_ = event.clientX - parseFloat(element.style.left);\n            this.startY_ = event.clientY - parseFloat(element.style.top);\n            this.dragging_ = true;\n            if (this.dragListenerKeys_.length === 0) {\n                var drag = this.handleDraggerDrag_;\n                var end = this.handleDraggerEnd_;\n                var doc = this.getMap().getOwnerDocument();\n                this.dragListenerKeys_.push(listen(doc, PointerEventType.POINTERMOVE, drag, this), listen(doc, PointerEventType.POINTERUP, end, this));\n            }\n        }\n    };\n    /**\n     * Handle dragger drag events.\n     *\n     * @param {PointerEvent} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerDrag_ = function (event) {\n        if (this.dragging_) {\n            var deltaX = event.clientX - this.startX_;\n            var deltaY = event.clientY - this.startY_;\n            var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n            this.currentResolution_ =\n                this.getResolutionForPosition_(relativePosition);\n            this.getMap().getView().setResolution(this.currentResolution_);\n        }\n    };\n    /**\n     * Handle dragger end events.\n     * @param {PointerEvent} event The drag event.\n     * @private\n     */\n    ZoomSlider.prototype.handleDraggerEnd_ = function (event) {\n        if (this.dragging_) {\n            var view = this.getMap().getView();\n            view.endInteraction();\n            this.dragging_ = false;\n            this.startX_ = undefined;\n            this.startY_ = undefined;\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n        }\n    };\n    /**\n     * Positions the thumb inside its container according to the given resolution.\n     *\n     * @param {number} res The res.\n     * @private\n     */\n    ZoomSlider.prototype.setThumbPosition_ = function (res) {\n        var position = this.getPositionForResolution_(res);\n        var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n        if (this.direction_ == Direction.HORIZONTAL) {\n            thumb.style.left = this.widthLimit_ * position + 'px';\n        }\n        else {\n            thumb.style.top = this.heightLimit_ * position + 'px';\n        }\n    };\n    /**\n     * Calculates the relative position of the thumb given x and y offsets.  The\n     * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n     * in pixel units within the dragger limits.\n     *\n     * @param {number} x Pixel position relative to the left of the slider.\n     * @param {number} y Pixel position relative to the top of the slider.\n     * @return {number} The relative position of the thumb.\n     * @private\n     */\n    ZoomSlider.prototype.getRelativePosition_ = function (x, y) {\n        var amount;\n        if (this.direction_ === Direction.HORIZONTAL) {\n            amount = x / this.widthLimit_;\n        }\n        else {\n            amount = y / this.heightLimit_;\n        }\n        return clamp(amount, 0, 1);\n    };\n    /**\n     * Calculates the corresponding resolution of the thumb given its relative\n     * position (where 0 is the minimum and 1 is the maximum).\n     *\n     * @param {number} position The relative position of the thumb.\n     * @return {number} The corresponding resolution.\n     * @private\n     */\n    ZoomSlider.prototype.getResolutionForPosition_ = function (position) {\n        var fn = this.getMap().getView().getResolutionForValueFunction();\n        return fn(1 - position);\n    };\n    /**\n     * Determines the relative position of the slider for the given resolution.  A\n     * relative position of 0 corresponds to the minimum view resolution.  A\n     * relative position of 1 corresponds to the maximum view resolution.\n     *\n     * @param {number} res The resolution.\n     * @return {number} The relative position value (between 0 and 1).\n     * @private\n     */\n    ZoomSlider.prototype.getPositionForResolution_ = function (res) {\n        var fn = this.getMap().getView().getValueForResolutionFunction();\n        return clamp(1 - fn(res), 0, 1);\n    };\n    /**\n     * Update the zoomslider element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    ZoomSlider.prototype.render = function (mapEvent) {\n        if (!mapEvent.frameState) {\n            return;\n        }\n        if (!this.sliderInitialized_ && !this.initSlider_()) {\n            return;\n        }\n        var res = mapEvent.frameState.viewState.resolution;\n        this.currentResolution_ = res;\n        this.setThumbPosition_(res);\n    };\n    return ZoomSlider;\n}(Control));\nexport default ZoomSlider;\n//# sourceMappingURL=ZoomSlider.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vm\"},[_c('h2',{staticClass:\"h-title\"},[_vm._v(\"缩放滑块控件 ZoomSlider\")]),_c('div',{staticClass:\"map-x\",attrs:{\"id\":\"map\"}})])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"vm\">\r\n    <h2 class=\"h-title\">缩放滑块控件 ZoomSlider</h2>\r\n    <div id=\"map\" class=\"map-x\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'ol/ol.css'\r\nimport { Map, View } from 'ol'\r\nimport Tile from 'ol/layer/Tile'\r\nimport BingMaps from 'ol/source/BingMaps'\r\nimport * as control from 'ol/control'\r\n\r\nexport default {\r\n  name: 'ZoomToExtent',\r\n  data () {\r\n    return {\r\n      map: null\r\n    }\r\n  },\r\n  methods: {\r\n    initMap () {\r\n      this.map = new Map({\r\n        target: 'map',\r\n        controls: control.defaults().extend([\r\n          new control.ZoomSlider()\r\n        ]),\r\n        layers: [\r\n          new Tile({\r\n            source: new BingMaps({\r\n              key: 'AiZrfxUNMRpOOlCpcMkBPxMUSKOEzqGeJTcVKUrXBsUdQDXutUBFN3-GnMNSlso-',\r\n              imagerySet: 'Aerial'\r\n            })\r\n          })\r\n        ],\r\n        view: new View({\r\n          projection: \"EPSG:4326\", // 坐标系，有EPSG:4326和EPSG:3857\r\n          center: [114.064839, 22.548857],\r\n          zoom: 4 // 地图缩放级别（打开页面时默认级别）\r\n        })\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.initMap()\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ZoomSlider.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ZoomSlider.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ZoomSlider.vue?vue&type=template&id=2284d975&\"\nimport script from \"./ZoomSlider.vue?vue&type=script&lang=js&\"\nexport * from \"./ZoomSlider.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport { jsonp as requestJSONP } from '../net.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            imageSmoothing: options.imageSmoothing,\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' +\n            _this.apiKey_ +\n            '&c=' +\n            _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight\n            ? resource.imageWidth / scale\n            : [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize,\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var z = tileGrid.getZForResolution(viewState.resolution, this.zDirection);\n                var tileCoord = tileGrid.getTileCoordForCoordAndZ(viewState.center, z);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin &&\n                            zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [opt_errback] Callback on error.\n * @param {string} [opt_callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src =\n        url +\n            (url.indexOf('?') == -1 ? '?' : '&') +\n            (opt_callbackParam || 'callback') +\n            '=' +\n            key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\nvar ResponseError = /** @class */ (function (_super) {\n    __extends(ResponseError, _super);\n    /**\n     * @param {XMLHttpRequest} response The XHR object.\n     */\n    function ResponseError(response) {\n        var _this = this;\n        var message = 'Unexpected response status: ' + response.status;\n        _this = _super.call(this, message) || this;\n        /**\n         * @type {string}\n         */\n        _this.name = 'ResponseError';\n        /**\n         * @type {XMLHttpRequest}\n         */\n        _this.response = response;\n        return _this;\n    }\n    return ResponseError;\n}(Error));\nexport { ResponseError };\nvar ClientError = /** @class */ (function (_super) {\n    __extends(ClientError, _super);\n    /**\n     * @param {XMLHttpRequest} client The XHR object.\n     */\n    function ClientError(client) {\n        var _this = _super.call(this, 'Failed to issue request') || this;\n        /**\n         * @type {string}\n         */\n        _this.name = 'ClientError';\n        /**\n         * @type {XMLHttpRequest}\n         */\n        _this.client = client;\n        return _this;\n    }\n    return ClientError;\n}(Error));\nexport { ClientError };\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n    return new Promise(function (resolve, reject) {\n        /**\n         * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n         */\n        function onLoad(event) {\n            var client = event.target;\n            // status will be 0 for file:// urls\n            if (!client.status || (client.status >= 200 && client.status < 300)) {\n                var data = void 0;\n                try {\n                    data = JSON.parse(client.responseText);\n                }\n                catch (err) {\n                    var message = 'Error parsing response text as JSON: ' + err.message;\n                    reject(new Error(message));\n                    return;\n                }\n                resolve(data);\n                return;\n            }\n            reject(new ResponseError(client));\n        }\n        /**\n         * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n         */\n        function onError(event) {\n            reject(new ClientError(event.target));\n        }\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', onLoad);\n        client.addEventListener('error', onError);\n        client.open('GET', url);\n        client.setRequestHeader('Accept', 'application/json');\n        client.send();\n    });\n}\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n    if (url.indexOf('://') >= 0) {\n        return url;\n    }\n    return new URL(url, base).href;\n}\nvar originalXHR;\nexport function overrideXHR(xhr) {\n    if (typeof XMLHttpRequest !== 'undefined') {\n        originalXHR = XMLHttpRequest;\n    }\n    global.XMLHttpRequest = xhr;\n}\nexport function restoreXHR() {\n    global.XMLHttpRequest = originalXHR;\n}\n//# sourceMappingURL=net.js.map"],"sourceRoot":""}