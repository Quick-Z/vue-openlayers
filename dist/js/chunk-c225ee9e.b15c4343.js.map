{"version":3,"sources":["webpack:///./node_modules/ol/style/Text.js","webpack:///./node_modules/ol/source/BingMaps.js","webpack:///./src/views/graticule/Graticule.vue?bbdf","webpack:///./node_modules/ol/render.js","webpack:///./node_modules/ol/geom/flat/geodesic.js","webpack:///./node_modules/ol/layer/Graticule.js","webpack:///src/views/graticule/Graticule.vue","webpack:///./src/views/graticule/Graticule.vue?10ea","webpack:///./src/views/graticule/Graticule.vue","webpack:///./node_modules/ol/net.js"],"names":["DEFAULT_FILL_COLOR","Text","opt_options","options","this","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","scale","scaleArray_","undefined","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","color","maxAngle_","maxAngle","Math","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","prototype","clone","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","Array","isArray","slice","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRotateWithView","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","call","TypeError","String","__","constructor","create","quadKey","tileCoord","i","charCode","z","digits","mask","fromCharCode","join","TOS_ATTRIBUTION","BingMaps","_super","_this","hidpi","cacheSize","crossOrigin","imageSmoothing","opaque","projection","reprojectionErrorThreshold","state","LOADING","tileLoadFunction","tilePixelRatio","wrapX","transition","zDirection","hidpi_","culture_","culture","maxZoom_","maxZoom","apiKey_","key","imagerySet_","imagerySet","url","handleImageryMetadataResponse","bind","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","length","resources","resource","zoomMax","sourceProjection","getProjection","extent","tileSize","imageWidth","imageHeight","tileGrid","minZoom","zoomMin","tileUrlFunction","imageUrlSubdomains","map","subdomain","quadKeyTileCoord","imageUrl","replace","pixelRatio","imageryProviders","transform_1","setAttributions","frameState","attributions","viewState","getTileGrid","getZForResolution","resolution","getTileCoordForCoordAndZ","center","zoom","imageryProvider","intersecting","coverageAreas","ii","coverageArea","bbox","epsg4326Extent","extent_1","push","attribution","setState","READY","ERROR","render","_vm","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","attrs","getVectorContext","event","userTransform","canvasPixelRatio","inversePixelTransform","transform","coordinateToPixelTransform","squaredTolerance","userProjection","context","line","interpolate","geoM","m","fracA","fracB","fracM","flatCoordinates","geoA","geoB","a","geoStack","stack","fractionStack","fractions","maxIterations","pop","toString","meridian","lon","lat1","lat2","epsg4326Projection","frac","parallel","lat","lon1","lon2","DEFAULT_STROKE_STYLE","Stroke","INTERVALS","Graticule","baseOptions","updateWhileAnimating","updateWhileInteracting","renderBuffer","maxLines","strokeStyle","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","projection_","maxLat_","Infinity","maxLon_","minLat_","minLon_","maxX_","maxY_","minX_","minY_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","bottomLeft_","bottomRight_","topLeft_","topRight_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleBase_","Style","Fill","width","lonLabelStyle_","feature","label","get","latLabelStyleBase_","latLabelStyle_","addEventListener","EventType","POSTRENDER","drawLabels_","intervals_","setSource","loader","loaderFunction","strategy","strategyFunction","features","Collection","overlaps","useSpatialIndex","featurePool_","lineStyle_","loadedExtent_","renderedExtent_","setRenderOrder","realWorldExtent","getSource","getWrapX","removeLoadedExtent","source","layerExtent","getExtent","renderExtent","updateProjectionInfo","updateProjectionInfo_","createGraticule_","featureCount","Feature","featuresColl","getFeaturesCollection","clear","l","poolIndex","setGeometry","setStyle","addMeridian_","minLat","maxLat","index","lineString","getMeridian_","geom","Point","addParallel_","minLon","maxLon","getParallel_","rotationCenter","rotationExtent","height","cr","abs","cos","sr","sin","unrotatedWidth","unrotatedHeight","startWorld","endWorld","labelsAtStart","projectionExtent","worldWidth","canWrapX","floor","ceil","inverted","vectorContext","world","textPoint","translate","rotate","getMeridianPoint_","set","drawFeature","getParallelPoint_","interval","getInterval_","validCenterP","centerLonLat","isNaN","cnt","idx","centerLon","centerLat","validExtentP","validExtent","max","min","target","pow","p1","p2","delta","clampedLat","dist","setFlatCoordinates","GeometryLayout","XY","changed","LineString","getFlatCoordinates","bottom","top","clampedBottom","clampedTop","coordinate0","coordinate","point","setCoordinates","getMeridians","left","right","clampedLeft","clampedRight","coordinate1","getParallels","worldExtent","getWorldExtent","toLonLatTransform","split_1","coordinates","opt_output","opt_dimension","dimension","lonLatCoordinates","worldExtentP","Vector","name","data","methods","initMap","Map","layers","view","View","lineDash","graticule","setMap","mounted","component","jsonp","callback","opt_errback","opt_callbackParam","script","document","createElement","cleanup","window","parentNode","removeChild","async","src","indexOf","timer","setTimeout","clearTimeout","getElementsByTagName","appendChild","ResponseError","message","status","Error","ClientError","client"],"mappings":"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","file":"js/chunk-c225ee9e.b15c4343.js","sourcesContent":["/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding(),\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/source/BingMaps\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport { applyTransform, intersects } from '../extent.js';\nimport { createFromTileUrlFunctions } from '../tileurlfunction.js';\nimport { createOrUpdate } from '../tilecoord.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\nimport { get as getProjection, getTransformFromProjections } from '../proj.js';\nimport { jsonp as requestJSONP } from '../net.js';\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n    var z = tileCoord[0];\n    var digits = new Array(z);\n    var mask = 1 << (z - 1);\n    var i, charCode;\n    for (i = 0; i < z; ++i) {\n        // 48 is charCode for 0 - '0'.charCodeAt(0)\n        charCode = 48;\n        if (tileCoord[1] & mask) {\n            charCode += 1;\n        }\n        if (tileCoord[2] & mask) {\n            charCode += 2;\n        }\n        digits[i] = String.fromCharCode(charCode);\n        mask >>= 1;\n    }\n    return digits.join('');\n}\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n    'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n    'Terms of Use</a>';\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /** @class */ (function (_super) {\n    __extends(BingMaps, _super);\n    /**\n     * @param {Options} options Bing Maps options.\n     */\n    function BingMaps(options) {\n        var _this = this;\n        var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n        _this = _super.call(this, {\n            cacheSize: options.cacheSize,\n            crossOrigin: 'anonymous',\n            imageSmoothing: options.imageSmoothing,\n            opaque: true,\n            projection: getProjection('EPSG:3857'),\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            state: SourceState.LOADING,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: hidpi ? 2 : 1,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.hidpi_ = hidpi;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.apiKey_ = options.key;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.imagerySet_ = options.imagerySet;\n        var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n            _this.imagerySet_ +\n            '?uriScheme=https&include=ImageryProviders&key=' +\n            _this.apiKey_ +\n            '&c=' +\n            _this.culture_;\n        requestJSONP(url, _this.handleImageryMetadataResponse.bind(_this), undefined, 'jsonp');\n        return _this;\n    }\n    /**\n     * Get the api key used for this source.\n     *\n     * @return {string} The api key.\n     * @api\n     */\n    BingMaps.prototype.getApiKey = function () {\n        return this.apiKey_;\n    };\n    /**\n     * Get the imagery set associated with this source.\n     *\n     * @return {string} The imagery set.\n     * @api\n     */\n    BingMaps.prototype.getImagerySet = function () {\n        return this.imagerySet_;\n    };\n    /**\n     * @param {BingMapsImageryMetadataResponse} response Response.\n     */\n    BingMaps.prototype.handleImageryMetadataResponse = function (response) {\n        if (response.statusCode != 200 ||\n            response.statusDescription != 'OK' ||\n            response.authenticationResultCode != 'ValidCredentials' ||\n            response.resourceSets.length != 1 ||\n            response.resourceSets[0].resources.length != 1) {\n            this.setState(SourceState.ERROR);\n            return;\n        }\n        var resource = response.resourceSets[0].resources[0];\n        var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n        var sourceProjection = this.getProjection();\n        var extent = extentFromProjection(sourceProjection);\n        var scale = this.hidpi_ ? 2 : 1;\n        var tileSize = resource.imageWidth == resource.imageHeight\n            ? resource.imageWidth / scale\n            : [resource.imageWidth / scale, resource.imageHeight / scale];\n        var tileGrid = createXYZ({\n            extent: extent,\n            minZoom: resource.zoomMin,\n            maxZoom: maxZoom,\n            tileSize: tileSize,\n        });\n        this.tileGrid = tileGrid;\n        var culture = this.culture_;\n        var hidpi = this.hidpi_;\n        this.tileUrlFunction = createFromTileUrlFunctions(resource.imageUrlSubdomains.map(function (subdomain) {\n            /** @type {import('../tilecoord.js').TileCoord} */\n            var quadKeyTileCoord = [0, 0, 0];\n            var imageUrl = resource.imageUrl\n                .replace('{subdomain}', subdomain)\n                .replace('{culture}', culture);\n            return (\n            /**\n             * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n             * @param {number} pixelRatio Pixel ratio.\n             * @param {import(\"../proj/Projection.js\").default} projection Projection.\n             * @return {string|undefined} Tile URL.\n             */\n            function (tileCoord, pixelRatio, projection) {\n                if (!tileCoord) {\n                    return undefined;\n                }\n                else {\n                    createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n                    var url = imageUrl;\n                    if (hidpi) {\n                        url += '&dpi=d1&device=mobile';\n                    }\n                    return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n                }\n            });\n        }));\n        if (resource.imageryProviders) {\n            var transform_1 = getTransformFromProjections(getProjection('EPSG:4326'), this.getProjection());\n            this.setAttributions(function (frameState) {\n                var attributions = [];\n                var viewState = frameState.viewState;\n                var tileGrid = this.getTileGrid();\n                var z = tileGrid.getZForResolution(viewState.resolution, this.zDirection);\n                var tileCoord = tileGrid.getTileCoordForCoordAndZ(viewState.center, z);\n                var zoom = tileCoord[0];\n                resource.imageryProviders.map(function (imageryProvider) {\n                    var intersecting = false;\n                    var coverageAreas = imageryProvider.coverageAreas;\n                    for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n                        var coverageArea = coverageAreas[i];\n                        if (zoom >= coverageArea.zoomMin &&\n                            zoom <= coverageArea.zoomMax) {\n                            var bbox = coverageArea.bbox;\n                            var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n                            var extent_1 = applyTransform(epsg4326Extent, transform_1);\n                            if (intersects(extent_1, frameState.extent)) {\n                                intersecting = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (intersecting) {\n                        attributions.push(imageryProvider.attribution);\n                    }\n                });\n                attributions.push(TOS_ATTRIBUTION);\n                return attributions;\n            }.bind(this));\n        }\n        this.setState(SourceState.READY);\n    };\n    return BingMaps;\n}(TileImage));\nexport default BingMaps;\n//# sourceMappingURL=BingMaps.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vm\"},[_c('h2',{staticClass:\"h-title\"},[_vm._v(\"网格 Graticule\")]),_c('div',{staticClass:\"map-x\",attrs:{\"id\":\"map\"}})])}]\n\nexport { render, staticRenderFns }","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform, } from './transform.js';\nimport { getSquaredTolerance } from './renderer/vector.js';\nimport { getTransformFromProjections, getUserProjection } from './proj.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions} [opt_options] Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @return {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    // canvas may be at a different pixel ratio than frameState.pixelRatio\n    var canvasPixelRatio = event.inversePixelTransform[0];\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    var squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, canvasPixelRatio);\n    var userTransform;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n        userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n    }\n    return new CanvasImmediateRenderer(event.context, canvasPixelRatio, frameState.extent, transform, frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @return {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n//# sourceMappingURL=render.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport { get as getProjection, getTransform } from '../../proj.js';\nimport { squaredSegmentDistance, toDegrees, toRadians } from '../../math.js';\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n    // FIXME reduce garbage generation\n    // FIXME optimize stack operations\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var geoA = interpolate(0);\n    var geoB = interpolate(1);\n    var a = transform(geoA);\n    var b = transform(geoB);\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var geoStack = [geoB, geoA];\n    /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n    var stack = [b, a];\n    /** @type {Array<number>} */\n    var fractionStack = [1, 0];\n    /** @type {!Object<string, boolean>} */\n    var fractions = {};\n    var maxIterations = 1e5;\n    var geoM, m, fracA, fracB, fracM, key;\n    while (--maxIterations > 0 && fractionStack.length > 0) {\n        // Pop the a coordinate off the stack\n        fracA = fractionStack.pop();\n        geoA = geoStack.pop();\n        a = stack.pop();\n        // Add the a coordinate if it has not been added yet\n        key = fracA.toString();\n        if (!(key in fractions)) {\n            flatCoordinates.push(a[0], a[1]);\n            fractions[key] = true;\n        }\n        // Pop the b coordinate off the stack\n        fracB = fractionStack.pop();\n        geoB = geoStack.pop();\n        b = stack.pop();\n        // Find the m point between the a and b coordinates\n        fracM = (fracA + fracB) / 2;\n        geoM = interpolate(fracM);\n        m = transform(geoM);\n        if (squaredSegmentDistance(m[0], m[1], a[0], a[1], b[0], b[1]) <\n            squaredTolerance) {\n            // If the m point is sufficiently close to the straight line, then we\n            // discard it.  Just use the b coordinate and move on to the next line\n            // segment.\n            flatCoordinates.push(b[0], b[1]);\n            key = fracB.toString();\n            fractions[key] = true;\n        }\n        else {\n            // Otherwise, we need to subdivide the current line segment.  Split it\n            // into two and push the two line segments onto the stack.\n            fractionStack.push(fracB, fracM, fracM, fracA);\n            stack.push(b, m, m, a);\n            geoStack.push(geoB, geoM, geoM, geoA);\n        }\n    }\n    return flatCoordinates;\n}\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n    var geoProjection = getProjection('EPSG:4326');\n    var cosLat1 = Math.cos(toRadians(lat1));\n    var sinLat1 = Math.sin(toRadians(lat1));\n    var cosLat2 = Math.cos(toRadians(lat2));\n    var sinLat2 = Math.sin(toRadians(lat2));\n    var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n    var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n    var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        if (1 <= d) {\n            return [lon2, lat2];\n        }\n        var D = frac * Math.acos(d);\n        var cosD = Math.cos(D);\n        var sinD = Math.sin(D);\n        var y = sinDeltaLon * cosLat2;\n        var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n        var theta = Math.atan2(y, x);\n        var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n        var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1, cosD - sinLat1 * Math.sin(lat));\n        return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon, lat1 + (lat2 - lat1) * frac];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n    return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function (frac) {\n        return [lon1 + (lon2 - lon1) * frac, lat];\n    }, getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n//# sourceMappingURL=geodesic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Graticule\n */\nimport Collection from '../Collection.js';\nimport EventType from '../render/EventType.js';\nimport Feature from '../Feature.js';\nimport Fill from '../style/Fill.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport VectorLayer from './Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport { applyTransform, approximatelyEquals, containsCoordinate, containsExtent, equals, getCenter, getHeight, getIntersection, getWidth, intersects, isEmpty, wrapX as wrapExtentX, } from '../extent.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\nimport { degreesToStringHDMS } from '../coordinate.js';\nimport { equivalent as equivalentProjection, get as getProjection, getTransform, } from '../proj.js';\nimport { getVectorContext } from '../render.js';\nimport { meridian, parallel } from '../geom/flat/geodesic.js';\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n    color: 'rgba(0,0,0,0.2)',\n});\n/**\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n    90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001,\n];\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom Geometry.\n * @property {string} text Text.\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system (currently only EPSG:4326 is supported).\n * Note that the view projection must define both extent and worldExtent.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nvar Graticule = /** @class */ (function (_super) {\n    __extends(Graticule, _super);\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Graticule(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({\n            updateWhileAnimating: true,\n            updateWhileInteracting: true,\n            renderBuffer: 0,\n        }, options);\n        delete baseOptions.maxLines;\n        delete baseOptions.strokeStyle;\n        delete baseOptions.targetSize;\n        delete baseOptions.showLabels;\n        delete baseOptions.lonLabelFormatter;\n        delete baseOptions.latLabelFormatter;\n        delete baseOptions.lonLabelPosition;\n        delete baseOptions.latLabelPosition;\n        delete baseOptions.lonLabelStyle;\n        delete baseOptions.latLabelStyle;\n        delete baseOptions.intervals;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = null;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLat_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLon_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLat_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minLon_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxX_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxY_ = Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minX_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minY_ = -Infinity;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.targetSize_ =\n            options.targetSize !== undefined ? options.targetSize : 100;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.meridians_ = [];\n        /**\n         * @type {Array<LineString>}\n         * @private\n         */\n        _this.parallels_ = [];\n        /**\n         * @type {Stroke}\n         * @private\n         */\n        _this.strokeStyle_ =\n            options.strokeStyle !== undefined\n                ? options.strokeStyle\n                : DEFAULT_STROKE_STYLE;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.fromLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../proj.js\").TransformFunction|undefined}\n         * @private\n         */\n        _this.toLonLatTransform_ = undefined;\n        /**\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.projectionCenterLonLat_ = null;\n        /**\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.bottomLeft_ = null;\n        /**\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.bottomRight_ = null;\n        /**\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.topLeft_ = null;\n        /**\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @private\n         */\n        _this.topRight_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.meridiansLabels_ = null;\n        /**\n         * @type {Array<GraticuleLabelDataType>}\n         * @private\n         */\n        _this.parallelsLabels_ = null;\n        if (options.showLabels) {\n            /**\n             * @type {null|function(number):string}\n             * @private\n             */\n            _this.lonLabelFormatter_ =\n                options.lonLabelFormatter == undefined\n                    ? degreesToStringHDMS.bind(_this, 'EW')\n                    : options.lonLabelFormatter;\n            /**\n             * @type {function(number):string}\n             * @private\n             */\n            _this.latLabelFormatter_ =\n                options.latLabelFormatter == undefined\n                    ? degreesToStringHDMS.bind(_this, 'NS')\n                    : options.latLabelFormatter;\n            /**\n             * Longitude label position in fractions (0..1) of view extent. 0 means\n             * bottom, 1 means top.\n             * @type {number}\n             * @private\n             */\n            _this.lonLabelPosition_ =\n                options.lonLabelPosition == undefined ? 0 : options.lonLabelPosition;\n            /**\n             * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n             * means right.\n             * @type {number}\n             * @private\n             */\n            _this.latLabelPosition_ =\n                options.latLabelPosition == undefined ? 1 : options.latLabelPosition;\n            /**\n             * @type {Style}\n             * @private\n             */\n            _this.lonLabelStyleBase_ = new Style({\n                text: options.lonLabelStyle !== undefined\n                    ? options.lonLabelStyle.clone()\n                    : new Text({\n                        font: '12px Calibri,sans-serif',\n                        textBaseline: 'bottom',\n                        fill: new Fill({\n                            color: 'rgba(0,0,0,1)',\n                        }),\n                        stroke: new Stroke({\n                            color: 'rgba(255,255,255,1)',\n                            width: 3,\n                        }),\n                    }),\n            });\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.lonLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                this.lonLabelStyleBase_.getText().setText(label);\n                return this.lonLabelStyleBase_;\n            }.bind(_this);\n            /**\n             * @type {Style}\n             * @private\n             */\n            _this.latLabelStyleBase_ = new Style({\n                text: options.latLabelStyle !== undefined\n                    ? options.latLabelStyle.clone()\n                    : new Text({\n                        font: '12px Calibri,sans-serif',\n                        textAlign: 'right',\n                        fill: new Fill({\n                            color: 'rgba(0,0,0,1)',\n                        }),\n                        stroke: new Stroke({\n                            color: 'rgba(255,255,255,1)',\n                            width: 3,\n                        }),\n                    }),\n            });\n            /**\n             * @private\n             * @param {import(\"../Feature\").default} feature Feature\n             * @return {Style} style\n             */\n            _this.latLabelStyle_ = function (feature) {\n                var label = feature.get('graticule_label');\n                this.latLabelStyleBase_.getText().setText(label);\n                return this.latLabelStyleBase_;\n            }.bind(_this);\n            _this.meridiansLabels_ = [];\n            _this.parallelsLabels_ = [];\n            _this.addEventListener(EventType.POSTRENDER, _this.drawLabels_.bind(_this));\n        }\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.intervals_ =\n            options.intervals !== undefined ? options.intervals : INTERVALS;\n        // use a source with a custom loader for lines & text\n        _this.setSource(new VectorSource({\n            loader: _this.loaderFunction.bind(_this),\n            strategy: _this.strategyFunction.bind(_this),\n            features: new Collection(),\n            overlaps: false,\n            useSpatialIndex: false,\n            wrapX: options.wrapX,\n        }));\n        /**\n         * feature pool to use when updating graticule\n         * @type {Array<Feature>}\n         * @private\n         */\n        _this.featurePool_ = [];\n        /**\n         * @type {Style}\n         * @private\n         */\n        _this.lineStyle_ = new Style({\n            stroke: _this.strokeStyle_,\n        });\n        /**\n         * @type {?import(\"../extent.js\").Extent}\n         * @private\n         */\n        _this.loadedExtent_ = null;\n        /**\n         * @type {?import(\"../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        _this.setRenderOrder(null);\n        return _this;\n    }\n    /**\n     * Strategy function for loading features based on the view's extent and\n     * resolution.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"../extent.js\").Extent>} Extents.\n     */\n    Graticule.prototype.strategyFunction = function (extent, resolution) {\n        // extents may be passed in different worlds, to avoid endless loop we use only one\n        var realWorldExtent = extent.slice();\n        if (this.projection_ && this.getSource().getWrapX()) {\n            wrapExtentX(realWorldExtent, this.projection_);\n        }\n        if (this.loadedExtent_) {\n            if (approximatelyEquals(this.loadedExtent_, realWorldExtent, resolution)) {\n                // make sure result is exactly equal to previous extent\n                realWorldExtent = this.loadedExtent_.slice();\n            }\n            else {\n                // we should not keep track of loaded extents\n                this.getSource().removeLoadedExtent(this.loadedExtent_);\n            }\n        }\n        return [realWorldExtent];\n    };\n    /**\n     * Update geometries in the source based on current view\n     * @param {import(\"../extent\").Extent} extent Extent\n     * @param {number} resolution Resolution\n     * @param {import(\"../proj/Projection.js\").default} projection Projection\n     */\n    Graticule.prototype.loaderFunction = function (extent, resolution, projection) {\n        this.loadedExtent_ = extent;\n        var source = this.getSource();\n        // only consider the intersection between our own extent & the requested one\n        var layerExtent = this.getExtent() || [\n            -Infinity,\n            -Infinity,\n            Infinity,\n            Infinity,\n        ];\n        var renderExtent = getIntersection(layerExtent, extent);\n        if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\n            return;\n        }\n        this.renderedExtent_ = renderExtent;\n        // bail out if nothing to render\n        if (isEmpty(renderExtent)) {\n            return;\n        }\n        // update projection info\n        var center = getCenter(renderExtent);\n        var squaredTolerance = (resolution * resolution) / 4;\n        var updateProjectionInfo = !this.projection_ || !equivalentProjection(this.projection_, projection);\n        if (updateProjectionInfo) {\n            this.updateProjectionInfo_(projection);\n        }\n        this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n        // first make sure we have enough features in the pool\n        var featureCount = this.meridians_.length + this.parallels_.length;\n        if (this.meridiansLabels_) {\n            featureCount += this.meridians_.length;\n        }\n        if (this.parallelsLabels_) {\n            featureCount += this.parallels_.length;\n        }\n        var feature;\n        while (featureCount > this.featurePool_.length) {\n            feature = new Feature();\n            this.featurePool_.push(feature);\n        }\n        var featuresColl = source.getFeaturesCollection();\n        featuresColl.clear();\n        var poolIndex = 0;\n        // add features for the lines & labels\n        var i, l;\n        for (i = 0, l = this.meridians_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.meridians_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n        for (i = 0, l = this.parallels_.length; i < l; ++i) {\n            feature = this.featurePool_[poolIndex++];\n            feature.setGeometry(this.parallels_[i]);\n            feature.setStyle(this.lineStyle_);\n            featuresColl.push(feature);\n        }\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addMeridian_ = function (lon, minLat, maxLat, squaredTolerance, extent, index) {\n        var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.meridiansLabels_) {\n                var text = this.lonLabelFormatter_(lon);\n                if (index in this.meridiansLabels_) {\n                    this.meridiansLabels_[index].text = text;\n                }\n                else {\n                    this.meridiansLabels_[index] = {\n                        geom: new Point([]),\n                        text: text,\n                    };\n                }\n            }\n            this.meridians_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {number} Index.\n     * @private\n     */\n    Graticule.prototype.addParallel_ = function (lat, minLon, maxLon, squaredTolerance, extent, index) {\n        var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n        if (intersects(lineString.getExtent(), extent)) {\n            if (this.parallelsLabels_) {\n                var text = this.latLabelFormatter_(lat);\n                if (index in this.parallelsLabels_) {\n                    this.parallelsLabels_[index].text = text;\n                }\n                else {\n                    this.parallelsLabels_[index] = {\n                        geom: new Point([]),\n                        text: text,\n                    };\n                }\n            }\n            this.parallels_[index++] = lineString;\n        }\n        return index;\n    };\n    /**\n     * @param {import(\"../render/Event.js\").default} event Render event.\n     * @private\n     */\n    Graticule.prototype.drawLabels_ = function (event) {\n        var rotation = event.frameState.viewState.rotation;\n        var extent = event.frameState.extent;\n        var rotationCenter = getCenter(extent);\n        var rotationExtent = extent;\n        if (rotation) {\n            var width = getWidth(extent);\n            var height = getHeight(extent);\n            var cr = Math.abs(Math.cos(rotation));\n            var sr = Math.abs(Math.sin(rotation));\n            var unrotatedWidth = (sr * height - cr * width) / (sr * sr - cr * cr);\n            var unrotatedHeight = (sr * width - cr * height) / (sr * sr - cr * cr);\n            rotationExtent = [\n                rotationCenter[0] - unrotatedWidth / 2,\n                rotationCenter[1] - unrotatedHeight / 2,\n                rotationCenter[0] + unrotatedWidth / 2,\n                rotationCenter[1] + unrotatedHeight / 2,\n            ];\n        }\n        var startWorld = 0;\n        var endWorld = 0;\n        var labelsAtStart = this.latLabelPosition_ < 0.5;\n        var projectionExtent = this.projection_.getExtent();\n        var worldWidth = getWidth(projectionExtent);\n        if (this.getSource().getWrapX() &&\n            this.projection_.canWrapX() &&\n            !containsExtent(projectionExtent, extent)) {\n            startWorld = Math.floor((extent[0] - projectionExtent[0]) / worldWidth);\n            endWorld = Math.ceil((extent[2] - projectionExtent[2]) / worldWidth);\n            var inverted = Math.abs(rotation) > Math.PI / 2;\n            labelsAtStart = labelsAtStart !== inverted;\n        }\n        var vectorContext = getVectorContext(event);\n        for (var world = startWorld; world <= endWorld; ++world) {\n            var poolIndex = this.meridians_.length + this.parallels_.length;\n            var feature = void 0, index = void 0, l = void 0, textPoint = void 0;\n            if (this.meridiansLabels_) {\n                for (index = 0, l = this.meridiansLabels_.length; index < l; ++index) {\n                    var lineString = this.meridians_[index];\n                    if (!rotation && world === 0) {\n                        textPoint = this.getMeridianPoint_(lineString, extent, index);\n                    }\n                    else {\n                        var clone = lineString.clone();\n                        clone.translate(world * worldWidth, 0);\n                        clone.rotate(-rotation, rotationCenter);\n                        textPoint = this.getMeridianPoint_(clone, rotationExtent, index);\n                        textPoint.rotate(rotation, rotationCenter);\n                    }\n                    feature = this.featurePool_[poolIndex++];\n                    feature.setGeometry(textPoint);\n                    feature.set('graticule_label', this.meridiansLabels_[index].text);\n                    vectorContext.drawFeature(feature, this.lonLabelStyle_(feature));\n                }\n            }\n            if (this.parallelsLabels_) {\n                if ((world === startWorld && labelsAtStart) ||\n                    (world === endWorld && !labelsAtStart)) {\n                    for (index = 0, l = this.parallels_.length; index < l; ++index) {\n                        var lineString = this.parallels_[index];\n                        if (!rotation && world === 0) {\n                            textPoint = this.getParallelPoint_(lineString, extent, index);\n                        }\n                        else {\n                            var clone = lineString.clone();\n                            clone.translate(world * worldWidth, 0);\n                            clone.rotate(-rotation, rotationCenter);\n                            textPoint = this.getParallelPoint_(clone, rotationExtent, index);\n                            textPoint.rotate(rotation, rotationCenter);\n                        }\n                        feature = this.featurePool_[poolIndex++];\n                        feature.setGeometry(textPoint);\n                        feature.set('graticule_label', this.parallelsLabels_[index].text);\n                        vectorContext.drawFeature(feature, this.latLabelStyle_(feature));\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {import(\"../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @private\n     */\n    Graticule.prototype.createGraticule_ = function (extent, center, resolution, squaredTolerance) {\n        var interval = this.getInterval_(resolution);\n        if (interval == -1) {\n            this.meridians_.length = 0;\n            this.parallels_.length = 0;\n            if (this.meridiansLabels_) {\n                this.meridiansLabels_.length = 0;\n            }\n            if (this.parallelsLabels_) {\n                this.parallelsLabels_.length = 0;\n            }\n            return;\n        }\n        var wrapX = false;\n        var projectionExtent = this.projection_.getExtent();\n        var worldWidth = getWidth(projectionExtent);\n        if (this.getSource().getWrapX() &&\n            this.projection_.canWrapX() &&\n            !containsExtent(projectionExtent, extent)) {\n            if (getWidth(extent) >= worldWidth) {\n                extent[0] = projectionExtent[0];\n                extent[2] = projectionExtent[2];\n            }\n            else {\n                wrapX = true;\n            }\n        }\n        // Constrain the center to fit into the extent available to the graticule\n        var validCenterP = [\n            clamp(center[0], this.minX_, this.maxX_),\n            clamp(center[1], this.minY_, this.maxY_),\n        ];\n        // Transform the center to lon lat\n        // Some projections may have a void area at the poles\n        // so replace any NaN latitudes with the min or max value closest to a pole\n        var centerLonLat = this.toLonLatTransform_(validCenterP);\n        if (isNaN(centerLonLat[1])) {\n            centerLonLat[1] =\n                Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n                    ? this.maxLat_\n                    : this.minLat_;\n        }\n        var centerLon = clamp(centerLonLat[0], this.minLon_, this.maxLon_);\n        var centerLat = clamp(centerLonLat[1], this.minLat_, this.maxLat_);\n        var maxLines = this.maxLines_;\n        var cnt, idx, lat, lon;\n        // Limit the extent to fit into the extent available to the graticule\n        var validExtentP = extent;\n        if (!wrapX) {\n            validExtentP = [\n                clamp(extent[0], this.minX_, this.maxX_),\n                clamp(extent[1], this.minY_, this.maxY_),\n                clamp(extent[2], this.minX_, this.maxX_),\n                clamp(extent[3], this.minY_, this.maxY_),\n            ];\n        }\n        // Transform the extent to get the lon lat ranges for the edges of the extent\n        var validExtent = applyTransform(validExtentP, this.toLonLatTransform_, undefined, 8);\n        var maxLat = validExtent[3];\n        var maxLon = validExtent[2];\n        var minLat = validExtent[1];\n        var minLon = validExtent[0];\n        if (!wrapX) {\n            // Check if extremities of the world extent lie inside the extent\n            // (for example the pole in a polar projection)\n            // and extend the extent as appropriate\n            if (containsCoordinate(validExtentP, this.bottomLeft_)) {\n                minLon = this.minLon_;\n                minLat = this.minLat_;\n            }\n            if (containsCoordinate(validExtentP, this.bottomRight_)) {\n                maxLon = this.maxLon_;\n                minLat = this.minLat_;\n            }\n            if (containsCoordinate(validExtentP, this.topLeft_)) {\n                minLon = this.minLon_;\n                maxLat = this.maxLat_;\n            }\n            if (containsCoordinate(validExtentP, this.topRight_)) {\n                maxLon = this.maxLon_;\n                maxLat = this.maxLat_;\n            }\n            // The transformed center may also extend the lon lat ranges used for rendering\n            maxLat = clamp(maxLat, centerLat, this.maxLat_);\n            maxLon = clamp(maxLon, centerLon, this.maxLon_);\n            minLat = clamp(minLat, this.minLat_, centerLat);\n            minLon = clamp(minLon, this.minLon_, centerLon);\n        }\n        // Create meridians\n        centerLon = Math.floor(centerLon / interval) * interval;\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n        cnt = 0;\n        if (wrapX) {\n            while ((lon -= interval) >= minLon && cnt++ < maxLines) {\n                idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n            }\n        }\n        else {\n            while (lon != this.minLon_ && cnt++ < maxLines) {\n                lon = Math.max(lon - interval, this.minLon_);\n                idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n            }\n        }\n        lon = clamp(centerLon, this.minLon_, this.maxLon_);\n        cnt = 0;\n        if (wrapX) {\n            while ((lon += interval) <= maxLon && cnt++ < maxLines) {\n                idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n            }\n        }\n        else {\n            while (lon != this.maxLon_ && cnt++ < maxLines) {\n                lon = Math.min(lon + interval, this.maxLon_);\n                idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n            }\n        }\n        this.meridians_.length = idx;\n        if (this.meridiansLabels_) {\n            this.meridiansLabels_.length = idx;\n        }\n        // Create parallels\n        centerLat = Math.floor(centerLat / interval) * interval;\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n        cnt = 0;\n        while (lat != this.minLat_ && cnt++ < maxLines) {\n            lat = Math.max(lat - interval, this.minLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        lat = clamp(centerLat, this.minLat_, this.maxLat_);\n        cnt = 0;\n        while (lat != this.maxLat_ && cnt++ < maxLines) {\n            lat = Math.min(lat + interval, this.maxLat_);\n            idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n        }\n        this.parallels_.length = idx;\n        if (this.parallelsLabels_) {\n            this.parallelsLabels_.length = idx;\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} The interval in degrees.\n     * @private\n     */\n    Graticule.prototype.getInterval_ = function (resolution) {\n        var centerLon = this.projectionCenterLonLat_[0];\n        var centerLat = this.projectionCenterLonLat_[1];\n        var interval = -1;\n        var target = Math.pow(this.targetSize_ * resolution, 2);\n        /** @type {Array<number>} **/\n        var p1 = [];\n        /** @type {Array<number>} **/\n        var p2 = [];\n        for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\n            var delta = clamp(this.intervals_[i] / 2, 0, 90);\n            // Don't attempt to transform latitudes beyond the poles!\n            var clampedLat = clamp(centerLat, -90 + delta, 90 - delta);\n            p1[0] = centerLon - delta;\n            p1[1] = clampedLat - delta;\n            p2[0] = centerLon + delta;\n            p2[1] = clampedLat + delta;\n            this.fromLonLatTransform_(p1, p1);\n            this.fromLonLatTransform_(p2, p2);\n            var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n            if (dist <= target) {\n                break;\n            }\n            interval = this.intervals_[i];\n        }\n        return interval;\n    };\n    /**\n     * @param {number} lon Longitude.\n     * @param {number} minLat Minimal latitude.\n     * @param {number} maxLat Maximal latitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The meridian line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getMeridian_ = function (lon, minLat, maxLat, squaredTolerance, index) {\n        var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n        var lineString = this.meridians_[index];\n        if (!lineString) {\n            lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n            this.meridians_[index] = lineString;\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Meridian\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Meridian point.\n     * @private\n     */\n    Graticule.prototype.getMeridianPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var bottom = 1;\n        var top = flatCoordinates.length - 1;\n        if (flatCoordinates[bottom] > flatCoordinates[top]) {\n            bottom = top;\n            top = 1;\n        }\n        var clampedBottom = Math.max(extent[1], flatCoordinates[bottom]);\n        var clampedTop = Math.min(extent[3], flatCoordinates[top]);\n        var lat = clamp(extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_, clampedBottom, clampedTop);\n        var coordinate0 = flatCoordinates[bottom - 1] +\n            ((flatCoordinates[top - 1] - flatCoordinates[bottom - 1]) *\n                (lat - flatCoordinates[bottom])) /\n                (flatCoordinates[top] - flatCoordinates[bottom]);\n        var coordinate = [coordinate0, lat];\n        var point = this.meridiansLabels_[index].geom;\n        point.setCoordinates(coordinate);\n        return point;\n    };\n    /**\n     * Get the list of meridians.  Meridians are lines of equal longitude.\n     * @return {Array<LineString>} The meridians.\n     * @api\n     */\n    Graticule.prototype.getMeridians = function () {\n        return this.meridians_;\n    };\n    /**\n     * @param {number} lat Latitude.\n     * @param {number} minLon Minimal longitude.\n     * @param {number} maxLon Maximal longitude.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LineString} The parallel line string.\n     * @param {number} index Index.\n     * @private\n     */\n    Graticule.prototype.getParallel_ = function (lat, minLon, maxLon, squaredTolerance, index) {\n        var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n        var lineString = this.parallels_[index];\n        if (!lineString) {\n            lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        else {\n            lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n            lineString.changed();\n        }\n        return lineString;\n    };\n    /**\n     * @param {LineString} lineString Parallels.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} index Index.\n     * @return {Point} Parallel point.\n     * @private\n     */\n    Graticule.prototype.getParallelPoint_ = function (lineString, extent, index) {\n        var flatCoordinates = lineString.getFlatCoordinates();\n        var left = 0;\n        var right = flatCoordinates.length - 2;\n        if (flatCoordinates[left] > flatCoordinates[right]) {\n            left = right;\n            right = 0;\n        }\n        var clampedLeft = Math.max(extent[0], flatCoordinates[left]);\n        var clampedRight = Math.min(extent[2], flatCoordinates[right]);\n        var lon = clamp(extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_, clampedLeft, clampedRight);\n        var coordinate1 = flatCoordinates[left + 1] +\n            ((flatCoordinates[right + 1] - flatCoordinates[left + 1]) *\n                (lon - flatCoordinates[left])) /\n                (flatCoordinates[right] - flatCoordinates[left]);\n        var coordinate = [lon, coordinate1];\n        var point = this.parallelsLabels_[index].geom;\n        point.setCoordinates(coordinate);\n        return point;\n    };\n    /**\n     * Get the list of parallels.  Parallels are lines of equal latitude.\n     * @return {Array<LineString>} The parallels.\n     * @api\n     */\n    Graticule.prototype.getParallels = function () {\n        return this.parallels_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @private\n     */\n    Graticule.prototype.updateProjectionInfo_ = function (projection) {\n        var epsg4326Projection = getProjection('EPSG:4326');\n        var worldExtent = projection.getWorldExtent();\n        this.maxLat_ = worldExtent[3];\n        this.maxLon_ = worldExtent[2];\n        this.minLat_ = worldExtent[1];\n        this.minLon_ = worldExtent[0];\n        // If the world extent crosses the dateline define a custom transform to\n        // return longitudes which wrap the dateline\n        var toLonLatTransform = getTransform(projection, epsg4326Projection);\n        if (this.minLon_ < this.maxLon_) {\n            this.toLonLatTransform_ = toLonLatTransform;\n        }\n        else {\n            var split_1 = this.minLon_ + this.maxLon_ / 2;\n            this.maxLon_ += 360;\n            this.toLonLatTransform_ = function (coordinates, opt_output, opt_dimension) {\n                var dimension = opt_dimension || 2;\n                var lonLatCoordinates = toLonLatTransform(coordinates, opt_output, dimension);\n                for (var i = 0, l = lonLatCoordinates.length; i < l; i += dimension) {\n                    if (lonLatCoordinates[i] < split_1) {\n                        lonLatCoordinates[i] += 360;\n                    }\n                }\n                return lonLatCoordinates;\n            };\n        }\n        // Transform the extent to get the limits of the view projection extent\n        // which should be available to the graticule\n        this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n        var worldExtentP = applyTransform([this.minLon_, this.minLat_, this.maxLon_, this.maxLat_], this.fromLonLatTransform_, undefined, 8);\n        this.minX_ = worldExtentP[0];\n        this.maxX_ = worldExtentP[2];\n        this.minY_ = worldExtentP[1];\n        this.maxY_ = worldExtentP[3];\n        // Determine the view projection coordinates of the extremities of the world extent\n        // as these may lie inside a view extent (for example the pole in a polar projection)\n        this.bottomLeft_ = this.fromLonLatTransform_([this.minLon_, this.minLat_]);\n        this.bottomRight_ = this.fromLonLatTransform_([this.maxLon_, this.minLat_]);\n        this.topLeft_ = this.fromLonLatTransform_([this.minLon_, this.maxLat_]);\n        this.topRight_ = this.fromLonLatTransform_([this.maxLon_, this.maxLat_]);\n        // Transform the projection center to lon lat\n        // Some projections may have a void area at the poles\n        // so replace any NaN latitudes with the min or max value closest to a pole\n        this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n        if (isNaN(this.projectionCenterLonLat_[1])) {\n            this.projectionCenterLonLat_[1] =\n                Math.abs(this.maxLat_) >= Math.abs(this.minLat_)\n                    ? this.maxLat_\n                    : this.minLat_;\n        }\n        this.projection_ = projection;\n    };\n    return Graticule;\n}(VectorLayer));\nexport default Graticule;\n//# sourceMappingURL=Graticule.js.map","<template>\r\n  <div class=\"vm\">\r\n    <h2 class=\"h-title\">网格 Graticule</h2>\r\n    <div id=\"map\" class=\"map-x\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'ol/ol.css'\r\nimport { Map, View } from 'ol'\r\nimport Stroke from 'ol/style/Stroke'\r\nimport Tile from 'ol/layer/Tile'\r\nimport Graticule from 'ol/layer/Graticule'\r\nimport BingMaps from 'ol/source/BingMaps'\r\n\r\nexport default {\r\n  name: 'Graticule',\r\n  data () {\r\n    return {\r\n      map: null\r\n    }\r\n  },\r\n  methods: {\r\n    initMap () {\r\n\r\n      // 初始化地图\r\n      this.map = new Map({\r\n        target: 'map',\r\n        layers: [\r\n          new Tile({\r\n            source: new BingMaps({\r\n              key: 'AiZrfxUNMRpOOlCpcMkBPxMUSKOEzqGeJTcVKUrXBsUdQDXutUBFN3-GnMNSlso-',\r\n              imagerySet: 'Road'\r\n            })\r\n          })\r\n        ],\r\n        view: new View({\r\n          projection: 'EPSG:4326', \r\n          center: [114.064839, 22.548857],\r\n          zoom: 6\r\n        })\r\n      })\r\n\r\n      let graticule = new Graticule({\r\n        strokeStyle: new Stroke({\r\n          color: 'rgba(255, 120, 0, .5)', // 线条颜色\r\n          width: 2, // 线条宽度\r\n          lineDash: [4] // 虚线，每隔4像素\r\n        }),\r\n        showLabels: true\r\n      })\r\n\r\n      graticule.setMap(this.map)\r\n    }\r\n  },\r\n  mounted () {\r\n    this.initMap()\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graticule.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Graticule.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Graticule.vue?vue&type=template&id=08d83fb5&\"\nimport script from \"./Graticule.vue?vue&type=script&lang=js&\"\nexport * from \"./Graticule.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/net\n */\nimport { getUid } from './util.js';\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [opt_errback] Callback on error.\n * @param {string} [opt_callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n    var script = document.createElement('script');\n    var key = 'olc_' + getUid(callback);\n    function cleanup() {\n        delete window[key];\n        script.parentNode.removeChild(script);\n    }\n    script.async = true;\n    script.src =\n        url +\n            (url.indexOf('?') == -1 ? '?' : '&') +\n            (opt_callbackParam || 'callback') +\n            '=' +\n            key;\n    var timer = setTimeout(function () {\n        cleanup();\n        if (opt_errback) {\n            opt_errback();\n        }\n    }, 10000);\n    window[key] = function (data) {\n        clearTimeout(timer);\n        cleanup();\n        callback(data);\n    };\n    document.getElementsByTagName('head')[0].appendChild(script);\n}\nvar ResponseError = /** @class */ (function (_super) {\n    __extends(ResponseError, _super);\n    /**\n     * @param {XMLHttpRequest} response The XHR object.\n     */\n    function ResponseError(response) {\n        var _this = this;\n        var message = 'Unexpected response status: ' + response.status;\n        _this = _super.call(this, message) || this;\n        /**\n         * @type {string}\n         */\n        _this.name = 'ResponseError';\n        /**\n         * @type {XMLHttpRequest}\n         */\n        _this.response = response;\n        return _this;\n    }\n    return ResponseError;\n}(Error));\nexport { ResponseError };\nvar ClientError = /** @class */ (function (_super) {\n    __extends(ClientError, _super);\n    /**\n     * @param {XMLHttpRequest} client The XHR object.\n     */\n    function ClientError(client) {\n        var _this = _super.call(this, 'Failed to issue request') || this;\n        /**\n         * @type {string}\n         */\n        _this.name = 'ClientError';\n        /**\n         * @type {XMLHttpRequest}\n         */\n        _this.client = client;\n        return _this;\n    }\n    return ClientError;\n}(Error));\nexport { ClientError };\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n    return new Promise(function (resolve, reject) {\n        /**\n         * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n         */\n        function onLoad(event) {\n            var client = event.target;\n            // status will be 0 for file:// urls\n            if (!client.status || (client.status >= 200 && client.status < 300)) {\n                var data = void 0;\n                try {\n                    data = JSON.parse(client.responseText);\n                }\n                catch (err) {\n                    var message = 'Error parsing response text as JSON: ' + err.message;\n                    reject(new Error(message));\n                    return;\n                }\n                resolve(data);\n                return;\n            }\n            reject(new ResponseError(client));\n        }\n        /**\n         * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n         */\n        function onError(event) {\n            reject(new ClientError(event.target));\n        }\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', onLoad);\n        client.addEventListener('error', onError);\n        client.open('GET', url);\n        client.setRequestHeader('Accept', 'application/json');\n        client.send();\n    });\n}\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n    if (url.indexOf('://') >= 0) {\n        return url;\n    }\n    return new URL(url, base).href;\n}\nvar originalXHR;\nexport function overrideXHR(xhr) {\n    if (typeof XMLHttpRequest !== 'undefined') {\n        originalXHR = XMLHttpRequest;\n    }\n    global.XMLHttpRequest = xhr;\n}\nexport function restoreXHR() {\n    global.XMLHttpRequest = originalXHR;\n}\n//# sourceMappingURL=net.js.map"],"sourceRoot":""}