{"version":3,"sources":["webpack:///./node_modules/ol/Overlay.js","webpack:///./src/views/popup/Popup.vue?4370","webpack:///./node_modules/ol/OverlayPositioning.js","webpack:///./src/views/popup/Popup.vue?da3e","webpack:///src/views/popup/Popup.vue","webpack:///./src/views/popup/Popup.vue?45ca","webpack:///./src/views/popup/Popup.vue"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","TypeError","String","__","this","constructor","create","Property","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay","_super","options","_this","on","once","un","id","insertFirst","undefined","stopEvent","element","document","createElement","className","style","position","pointerEvents","autoPan","animation","autoPanAnimation","margin","autoPanMargin","rendered","transform_","visible","mapPostrenderListenerKey","addChangeListener","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","offset","setPositioning","positioning","TOP_LEFT","setPosition","getElement","get","getId","getMap","getOffset","getPosition","getPositioning","appendChild","map","POSTRENDER","render","updatePixelPosition","container","getOverlayContainerStopEvent","getOverlayContainer","insertBefore","childNodes","performAutoPan","set","setMap","panIntoView","opt_panIntoViewOptions","getTargetElement","mapRect","getRect","getSize","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","delta","Math","abs","center","getView","getCenterInternal","centerPx","getPixelFromCoordinateInternal","newCenterPx","panOptions","animateInternal","getCoordinateFromPixelInternal","duration","easing","size","box","getBoundingClientRect","offsetX","left","window","pageXOffset","offsetY","top","pageYOffset","setVisible","display","isRendered","pixel","getPixelFromCoordinate","mapSize","updateRenderedPosition","x","round","y","posX","posY","BOTTOM_RIGHT","CENTER_RIGHT","TOP_RIGHT","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","BOTTOM_LEFT","CENTER_LEFT","transform","msTransform","getOptions","_vm","_h","$createElement","_c","_self","staticClass","_v","ref","attrs","closePopup","_s","currentCoordinate","_m","staticRenderFns","name","data","overlay","methods","initMap","$refs","popup","Map","target","layers","overlays","view","View","projection","zoom","mapClick","mounted","component"],"mappings":"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","file":"js/chunk-66398e06.f6180a92.js","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport { CLASS_SELECTABLE } from './css.js';\nimport { containsExtent } from './extent.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { outerHeight, outerWidth, removeChildren, removeNode } from './dom.js';\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n    ELEMENT: 'element',\n    MAP: 'map',\n    OFFSET: 'offset',\n    POSITION: 'position',\n    POSITIONING: 'positioning',\n};\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /** @class */ (function (_super) {\n    __extends(Overlay, _super);\n    /**\n     * @param {Options} options Overlay options.\n     */\n    function Overlay(options) {\n        var _this = _super.call(this) || this;\n        /***\n         * @type {OverlayOnSignature<import(\"./Observable\").OnReturn>}\n         */\n        _this.on;\n        /***\n         * @type {OverlayOnSignature<import(\"./Observable\").OnReturn>}\n         */\n        _this.once;\n        /***\n         * @type {OverlayOnSignature<void>}\n         */\n        _this.un;\n        /**\n         * @protected\n         * @type {Options}\n         */\n        _this.options = options;\n        /**\n         * @protected\n         * @type {number|string|undefined}\n         */\n        _this.id = options.id;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.insertFirst =\n            options.insertFirst !== undefined ? options.insertFirst : true;\n        /**\n         * @protected\n         * @type {boolean}\n         */\n        _this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = document.createElement('div');\n        _this.element.className =\n            options.className !== undefined\n                ? options.className\n                : 'ol-overlay-container ' + CLASS_SELECTABLE;\n        _this.element.style.position = 'absolute';\n        _this.element.style.pointerEvents = 'auto';\n        var autoPan = options.autoPan;\n        if (autoPan && 'object' !== typeof autoPan) {\n            autoPan = {\n                animation: options.autoPanAnimation,\n                margin: options.autoPanMargin,\n            };\n        }\n        /**\n         * @protected\n         * @type {PanIntoViewOptions|false}\n         */\n        _this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n        /**\n         * @protected\n         * @type {{transform_: string,\n         *         visible: boolean}}\n         */\n        _this.rendered = {\n            transform_: '',\n            visible: true,\n        };\n        /**\n         * @protected\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.mapPostrenderListenerKey = null;\n        _this.addChangeListener(Property.ELEMENT, _this.handleElementChanged);\n        _this.addChangeListener(Property.MAP, _this.handleMapChanged);\n        _this.addChangeListener(Property.OFFSET, _this.handleOffsetChanged);\n        _this.addChangeListener(Property.POSITION, _this.handlePositionChanged);\n        _this.addChangeListener(Property.POSITIONING, _this.handlePositioningChanged);\n        if (options.element !== undefined) {\n            _this.setElement(options.element);\n        }\n        _this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n        _this.setPositioning(options.positioning !== undefined\n            ? /** @type {import(\"./OverlayPositioning.js\").default} */ (options.positioning)\n            : OverlayPositioning.TOP_LEFT);\n        if (options.position !== undefined) {\n            _this.setPosition(options.position);\n        }\n        return _this;\n    }\n    /**\n     * Get the DOM element of this overlay.\n     * @return {HTMLElement|undefined} The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getElement = function () {\n        return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n    };\n    /**\n     * Get the overlay identifier which is set on constructor.\n     * @return {number|string|undefined} Id.\n     * @api\n     */\n    Overlay.prototype.getId = function () {\n        return this.id;\n    };\n    /**\n     * Get the map associated with this overlay.\n     * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getMap = function () {\n        return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP));\n    };\n    /**\n     * Get the offset of this overlay.\n     * @return {Array<number>} The offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getOffset = function () {\n        return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n    };\n    /**\n     * Get the current position of this overlay.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n     *     anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPosition = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION));\n    };\n    /**\n     * Get the current positioning of this overlay.\n     * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n     *     relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.getPositioning = function () {\n        return /** @type {import(\"./OverlayPositioning.js\").default} */ (this.get(Property.POSITIONING));\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleElementChanged = function () {\n        removeChildren(this.element);\n        var element = this.getElement();\n        if (element) {\n            this.element.appendChild(element);\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleMapChanged = function () {\n        if (this.mapPostrenderListenerKey) {\n            removeNode(this.element);\n            unlistenByKey(this.mapPostrenderListenerKey);\n            this.mapPostrenderListenerKey = null;\n        }\n        var map = this.getMap();\n        if (map) {\n            this.mapPostrenderListenerKey = listen(map, MapEventType.POSTRENDER, this.render, this);\n            this.updatePixelPosition();\n            var container = this.stopEvent\n                ? map.getOverlayContainerStopEvent()\n                : map.getOverlayContainer();\n            if (this.insertFirst) {\n                container.insertBefore(this.element, container.childNodes[0] || null);\n            }\n            else {\n                container.appendChild(this.element);\n            }\n            this.performAutoPan();\n        }\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.render = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handleOffsetChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositionChanged = function () {\n        this.updatePixelPosition();\n        this.performAutoPan();\n    };\n    /**\n     * @protected\n     */\n    Overlay.prototype.handlePositioningChanged = function () {\n        this.updatePixelPosition();\n    };\n    /**\n     * Set the DOM element to be associated with this overlay.\n     * @param {HTMLElement|undefined} element The Element containing the overlay.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setElement = function (element) {\n        this.set(Property.ELEMENT, element);\n    };\n    /**\n     * Set the map to be associated with this overlay.\n     * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n     * overlay is part of.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setMap = function (map) {\n        this.set(Property.MAP, map);\n    };\n    /**\n     * Set the offset for this overlay.\n     * @param {Array<number>} offset Offset.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setOffset = function (offset) {\n        this.set(Property.OFFSET, offset);\n    };\n    /**\n     * Set the position for this overlay. If the position is `undefined` the\n     * overlay is hidden.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n     *     is anchored at.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPosition = function (position) {\n        this.set(Property.POSITION, position);\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary) using the configured autoPan parameters\n     * @protected\n     */\n    Overlay.prototype.performAutoPan = function () {\n        if (this.autoPan) {\n            this.panIntoView(this.autoPan);\n        }\n    };\n    /**\n     * Pan the map so that the overlay is entirely visible in the current viewport\n     * (if necessary).\n     * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n     * @api\n     */\n    Overlay.prototype.panIntoView = function (opt_panIntoViewOptions) {\n        var map = this.getMap();\n        if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n            return;\n        }\n        var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n        var element = this.getElement();\n        var overlayRect = this.getRect(element, [\n            outerWidth(element),\n            outerHeight(element),\n        ]);\n        var panIntoViewOptions = opt_panIntoViewOptions || {};\n        var myMargin = panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n        if (!containsExtent(mapRect, overlayRect)) {\n            // the overlay is not completely inside the viewport, so pan the map\n            var offsetLeft = overlayRect[0] - mapRect[0];\n            var offsetRight = mapRect[2] - overlayRect[2];\n            var offsetTop = overlayRect[1] - mapRect[1];\n            var offsetBottom = mapRect[3] - overlayRect[3];\n            var delta = [0, 0];\n            if (offsetLeft < 0) {\n                // move map to the left\n                delta[0] = offsetLeft - myMargin;\n            }\n            else if (offsetRight < 0) {\n                // move map to the right\n                delta[0] = Math.abs(offsetRight) + myMargin;\n            }\n            if (offsetTop < 0) {\n                // move map up\n                delta[1] = offsetTop - myMargin;\n            }\n            else if (offsetBottom < 0) {\n                // move map down\n                delta[1] = Math.abs(offsetBottom) + myMargin;\n            }\n            if (delta[0] !== 0 || delta[1] !== 0) {\n                var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenterInternal());\n                var centerPx = map.getPixelFromCoordinateInternal(center);\n                if (!centerPx) {\n                    return;\n                }\n                var newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n                var panOptions = panIntoViewOptions.animation || {};\n                map.getView().animateInternal({\n                    center: map.getCoordinateFromPixelInternal(newCenterPx),\n                    duration: panOptions.duration,\n                    easing: panOptions.easing,\n                });\n            }\n        }\n    };\n    /**\n     * Get the extent of an element relative to the document\n     * @param {HTMLElement} element The element.\n     * @param {import(\"./size.js\").Size} size The size of the element.\n     * @return {import(\"./extent.js\").Extent} The extent.\n     * @protected\n     */\n    Overlay.prototype.getRect = function (element, size) {\n        var box = element.getBoundingClientRect();\n        var offsetX = box.left + window.pageXOffset;\n        var offsetY = box.top + window.pageYOffset;\n        return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n    };\n    /**\n     * Set the positioning for this overlay.\n     * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n     *     positioned relative to its point on the map.\n     * @observable\n     * @api\n     */\n    Overlay.prototype.setPositioning = function (positioning) {\n        this.set(Property.POSITIONING, positioning);\n    };\n    /**\n     * Modify the visibility of the element.\n     * @param {boolean} visible Element visibility.\n     * @protected\n     */\n    Overlay.prototype.setVisible = function (visible) {\n        if (this.rendered.visible !== visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.rendered.visible = visible;\n        }\n    };\n    /**\n     * Update pixel position.\n     * @protected\n     */\n    Overlay.prototype.updatePixelPosition = function () {\n        var map = this.getMap();\n        var position = this.getPosition();\n        if (!map || !map.isRendered() || !position) {\n            this.setVisible(false);\n            return;\n        }\n        var pixel = map.getPixelFromCoordinate(position);\n        var mapSize = map.getSize();\n        this.updateRenderedPosition(pixel, mapSize);\n    };\n    /**\n     * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n     * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n     * @protected\n     */\n    Overlay.prototype.updateRenderedPosition = function (pixel, mapSize) {\n        var style = this.element.style;\n        var offset = this.getOffset();\n        var positioning = this.getPositioning();\n        this.setVisible(true);\n        var x = Math.round(pixel[0] + offset[0]) + 'px';\n        var y = Math.round(pixel[1] + offset[1]) + 'px';\n        var posX = '0%';\n        var posY = '0%';\n        if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n            positioning == OverlayPositioning.CENTER_RIGHT ||\n            positioning == OverlayPositioning.TOP_RIGHT) {\n            posX = '-100%';\n        }\n        else if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.CENTER_CENTER ||\n            positioning == OverlayPositioning.TOP_CENTER) {\n            posX = '-50%';\n        }\n        if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n            positioning == OverlayPositioning.BOTTOM_CENTER ||\n            positioning == OverlayPositioning.BOTTOM_RIGHT) {\n            posY = '-100%';\n        }\n        else if (positioning == OverlayPositioning.CENTER_LEFT ||\n            positioning == OverlayPositioning.CENTER_CENTER ||\n            positioning == OverlayPositioning.CENTER_RIGHT) {\n            posY = '-50%';\n        }\n        var transform = \"translate(\" + posX + \", \" + posY + \") translate(\" + x + \", \" + y + \")\";\n        if (this.rendered.transform_ != transform) {\n            this.rendered.transform_ = transform;\n            style.transform = transform;\n            // @ts-ignore IE9\n            style.msTransform = transform;\n        }\n    };\n    /**\n     * returns the options this Overlay has been created with\n     * @return {Options} overlay options\n     */\n    Overlay.prototype.getOptions = function () {\n        return this.options;\n    };\n    return Overlay;\n}(BaseObject));\nexport default Overlay;\n//# sourceMappingURL=Overlay.js.map","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Popup.vue?vue&type=style&index=0&id=2f9cec9f&lang=scss&scoped=true&\"","/**\n * @module ol/OverlayPositioning\n */\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_CENTER: 'bottom-center',\n    BOTTOM_RIGHT: 'bottom-right',\n    CENTER_LEFT: 'center-left',\n    CENTER_CENTER: 'center-center',\n    CENTER_RIGHT: 'center-right',\n    TOP_LEFT: 'top-left',\n    TOP_CENTER: 'top-center',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=OverlayPositioning.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vm\"},[_c('h2',{staticClass:\"h-title\"},[_vm._v(\"弹窗 popup\")]),_c('div',{ref:\"map\",staticClass:\"map-x\",attrs:{\"id\":\"map\"}}),_c('div',{ref:\"HitMap\",staticClass:\"hit-map\"}),_c('div',{ref:\"popup\",staticClass:\"popup\"},[_c('span',{staticClass:\"icon-close\",on:{\"click\":_vm.closePopup}},[_vm._v(\"✖\")]),_c('div',{staticClass:\"content\"},[_vm._v(_vm._s(_vm.currentCoordinate))])]),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"explain\"},[_c('p',[_vm._v(\" overlay：叠加层，即叠加到地图上显示的元素， 关联了一个自定义的HTML元素，由一个单一的地图坐标点确定叠加位置。 与控件类似，但不同的是叠加元素不是在一个固定的屏幕位置上， 而是通过关联一个地图逻辑坐标点跟随地图移动，如标注点、popup等。 \")])])}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"vm\">\r\n    <h2 class=\"h-title\">弹窗 popup</h2>\r\n    <div id=\"map\" class=\"map-x\" ref=\"map\"></div>\r\n\r\n    <div class=\"hit-map\" ref=\"HitMap\">\r\n    </div>\r\n    <div ref=\"popup\" class=\"popup\">\r\n      <span class=\"icon-close\" @click=\"closePopup\">✖</span>\r\n      <div class=\"content\">{{currentCoordinate}}</div>\r\n    </div>\r\n    <div class=\"explain\">\r\n      <p>\r\n        overlay：叠加层，即叠加到地图上显示的元素，\r\n        关联了一个自定义的HTML元素，由一个单一的地图坐标点确定叠加位置。\r\n        与控件类似，但不同的是叠加元素不是在一个固定的屏幕位置上，\r\n        而是通过关联一个地图逻辑坐标点跟随地图移动，如标注点、popup等。\r\n      </p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'ol/ol.css'\r\nimport { Map, View } from 'ol'\r\nimport Tile from 'ol/layer/Tile'\r\nimport XYZ from 'ol/source/XYZ' // 引入XYZ地图格式\r\nimport Overlay from 'ol/Overlay'\r\nimport { toStringHDMS } from 'ol/coordinate'\r\nimport { toLonLat } from 'ol/proj'\r\n\r\nexport default {\r\n  name: 'Popup',\r\n  data() {\r\n    return {\r\n      map: null,\r\n      overlay: null,\r\n      currentCoordinate: ''\r\n    }\r\n  },\r\n  methods: {\r\n    initMap() {\r\n\r\n      // 弹窗\r\n      this.overlay = new Overlay({\r\n        element: this.$refs.popup, // 弹窗标签，在html里\r\n        autoPan: true, // 如果弹窗在底图边缘时，底图会移动\r\n        autoPanAnimation: { // 底图移动动画\r\n          duration: 250\r\n        }\r\n      })\r\n\r\n      // 实例化地图\r\n      this.map = new Map({\r\n        target: this.$refs.map,\r\n        layers: [\r\n          new Tile({\r\n            name: 'defaultLayer',\r\n            source: new XYZ({\r\n              url: 'http://map.geoq.cn/ArcGIS/rest/services/ChinaOnlineStreetPurplishBlue/MapServer/tile/{z}/{y}/{x}'\r\n            })\r\n          })\r\n        ],\r\n        overlays: [this.overlay], // 把弹窗加入地图\r\n        view: new View({\r\n          projection: 'EPSG:4326',\r\n          center: [113.1206, 23.034996],\r\n          zoom: 12 // 地图缩放级别（打开页面时默认级别）\r\n        })\r\n      })\r\n\r\n      this.mapClick()\r\n    },\r\n\r\n    mapClick() {\r\n      this.map.on(\"singleclick\", evt =>{\r\n        const coordinate = evt.coordinate // 获取坐标\r\n        const hdms = toStringHDMS(toLonLat(coordinate)) // 转换坐标格式\r\n        this.currentCoordinate = hdms // 保存坐标点\r\n        this.overlay.setPosition(coordinate)\r\n      })\r\n    },\r\n    // 关闭弹窗\r\n    closePopup () {\r\n      this.overlay.setPosition(undefined)\r\n      this.currentCoordinate = null\r\n    }\r\n  },\r\n  mounted () {\r\n    this.initMap()\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n  @import '@/assets/css/varibles.scss';\r\n  .popup {\r\n    width: 300px;\r\n    height: 100px;\r\n    background: #fff;\r\n    position: absolute;\r\n    top: -115px;\r\n    left: -150px;\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n\r\n    &::after {\r\n      content: '';\r\n      display: block;\r\n      position: absolute;\r\n      width: 20px;\r\n      height: 20px;\r\n      background: #fff;\r\n      bottom: -10px;\r\n      left: 50%;\r\n      transform: translateX(-50%) rotate(45deg);\r\n    }\r\n\r\n    .icon-close {\r\n      position: absolute;\r\n      top: 0px;\r\n      right: 8px;\r\n    }\r\n\r\n    .content {\r\n      margin-top: 14px;\r\n    }\r\n  }\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Popup.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Popup.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Popup.vue?vue&type=template&id=2f9cec9f&scoped=true&\"\nimport script from \"./Popup.vue?vue&type=script&lang=js&\"\nexport * from \"./Popup.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Popup.vue?vue&type=style&index=0&id=2f9cec9f&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2f9cec9f\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}