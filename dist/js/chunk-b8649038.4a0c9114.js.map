{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.regexp.to-string.js","webpack:///./node_modules/ol/style/Text.js","webpack:///./src/views/polymerization/Polymerization.vue?c71b","webpack:///./node_modules/ol/source/Cluster.js","webpack:///src/views/polymerization/Polymerization.vue","webpack:///./src/views/polymerization/Polymerization.vue?0790","webpack:///./src/views/polymerization/Polymerization.vue","webpack:///./node_modules/core-js/internals/regexp-flags.js"],"names":["redefine","anObject","$toString","fails","flags","TO_STRING","RegExpPrototype","RegExp","prototype","nativeToString","NOT_GENERIC","call","source","INCORRECT_NAME","name","R","this","p","rf","f","undefined","unsafe","DEFAULT_FILL_COLOR","Text","opt_options","options","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","scale","scaleArray_","text_","text","textAlign_","textAlign","textBaseline_","textBaseline","fill_","fill","color","maxAngle_","maxAngle","Math","PI","placement_","placement","POINT","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","clone","getScale","getFont","getPlacement","getMaxAngle","getOverflow","getRotation","getRotateWithView","Array","isArray","slice","getText","getTextAlign","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRotateWithView","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","render","_vm","_h","$createElement","_self","_c","_m","staticRenderFns","staticClass","_v","attrs","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","hasOwnProperty","TypeError","String","__","constructor","create","_super","Cluster","_this","attributions","wrapX","resolution","distance","minDistance","interpolationRatio","features","geometryFunction","feature","geometry","getGeometry","getType","GeometryType","createCustomCluster_","createCluster","boundRefresh_","refresh","bind","updateDistance","setSource","clear","opt_fast","length","getDistance","getSource","loadFeatures","extent","projection","setDistance","setMinDistance","getMinDistance","removeEventListener","EventType","CHANGE","addEventListener","cluster","addFeatures","ratio","min","changed","mapDistance","getFeatures","clustered","i","ii","coordinates","getCoordinates","neighbors","getFeaturesInExtent","filter","neighbor","uid","push","centroid","geometry_1","splice","searchCenter","Point","Feature","data","map","methods","initMap","parseInt","clusterSource","style","Style","image","Circle","radius","Stroke","Fill","size","toString","styleCache","OSM","Map","target","layers","raster","clusters","view","View","center","zoom","mounted","component","module","exports","that","result","global","ignoreCase","multiline","dotAll","unicode","sticky"],"mappings":"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","file":"js/chunk-b8649038.4a0c9114.js","sourcesContent":["'use strict';\nvar redefine = require('../internals/redefine');\nvar anObject = require('../internals/an-object');\nvar $toString = require('../internals/to-string');\nvar fails = require('../internals/fails');\nvar flags = require('../internals/regexp-flags');\n\nvar TO_STRING = 'toString';\nvar RegExpPrototype = RegExp.prototype;\nvar nativeToString = RegExpPrototype[TO_STRING];\n\nvar NOT_GENERIC = fails(function () { return nativeToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });\n// FF44- RegExp#toString has a wrong name\nvar INCORRECT_NAME = nativeToString.name != TO_STRING;\n\n// `RegExp.prototype.toString` method\n// https://tc39.es/ecma262/#sec-regexp.prototype.tostring\nif (NOT_GENERIC || INCORRECT_NAME) {\n  redefine(RegExp.prototype, TO_STRING, function toString() {\n    var R = anObject(this);\n    var p = $toString(R.source);\n    var rf = R.flags;\n    var f = $toString(rf === undefined && R instanceof RegExp && !('flags' in RegExpPrototype) ? flags.call(R) : rf);\n    return '/' + p + '/' + f;\n  }, { unsafe: true });\n}\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\nimport { toSize } from '../size.js';\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = /** @class */ (function () {\n    /**\n     * @param {Options} [opt_options] Options.\n     */\n    function Text(opt_options) {\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.font_ = options.font;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.rotation_ = options.rotation;\n        /**\n         * @private\n         * @type {boolean|undefined}\n         */\n        this.rotateWithView_ = options.rotateWithView;\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size|undefined}\n         */\n        this.scale_ = options.scale;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.text_ = options.text;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textAlign_ = options.textAlign;\n        /**\n         * @private\n         * @type {string|undefined}\n         */\n        this.textBaseline_ = options.textBaseline;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.fill_ =\n            options.fill !== undefined\n                ? options.fill\n                : new Fill({ color: DEFAULT_FILL_COLOR });\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxAngle_ =\n            options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n        /**\n         * @private\n         * @type {import(\"./TextPlacement.js\").default|string}\n         */\n        this.placement_ =\n            options.placement !== undefined ? options.placement : TextPlacement.POINT;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.overflow_ = !!options.overflow;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n        /**\n         * @private\n         * @type {import(\"./Fill.js\").default}\n         */\n        this.backgroundFill_ = options.backgroundFill\n            ? options.backgroundFill\n            : null;\n        /**\n         * @private\n         * @type {import(\"./Stroke.js\").default}\n         */\n        this.backgroundStroke_ = options.backgroundStroke\n            ? options.backgroundStroke\n            : null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.padding_ = options.padding === undefined ? null : options.padding;\n    }\n    /**\n     * Clones the style.\n     * @return {Text} The cloned style.\n     * @api\n     */\n    Text.prototype.clone = function () {\n        var scale = this.getScale();\n        return new Text({\n            font: this.getFont(),\n            placement: this.getPlacement(),\n            maxAngle: this.getMaxAngle(),\n            overflow: this.getOverflow(),\n            rotation: this.getRotation(),\n            rotateWithView: this.getRotateWithView(),\n            scale: Array.isArray(scale) ? scale.slice() : scale,\n            text: this.getText(),\n            textAlign: this.getTextAlign(),\n            textBaseline: this.getTextBaseline(),\n            fill: this.getFill() ? this.getFill().clone() : undefined,\n            stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n            offsetX: this.getOffsetX(),\n            offsetY: this.getOffsetY(),\n            backgroundFill: this.getBackgroundFill()\n                ? this.getBackgroundFill().clone()\n                : undefined,\n            backgroundStroke: this.getBackgroundStroke()\n                ? this.getBackgroundStroke().clone()\n                : undefined,\n            padding: this.getPadding(),\n        });\n    };\n    /**\n     * Get the `overflow` configuration.\n     * @return {boolean} Let text overflow the length of the path they follow.\n     * @api\n     */\n    Text.prototype.getOverflow = function () {\n        return this.overflow_;\n    };\n    /**\n     * Get the font name.\n     * @return {string|undefined} Font.\n     * @api\n     */\n    Text.prototype.getFont = function () {\n        return this.font_;\n    };\n    /**\n     * Get the maximum angle between adjacent characters.\n     * @return {number} Angle in radians.\n     * @api\n     */\n    Text.prototype.getMaxAngle = function () {\n        return this.maxAngle_;\n    };\n    /**\n     * Get the label placement.\n     * @return {import(\"./TextPlacement.js\").default|string} Text placement.\n     * @api\n     */\n    Text.prototype.getPlacement = function () {\n        return this.placement_;\n    };\n    /**\n     * Get the x-offset for the text.\n     * @return {number} Horizontal text offset.\n     * @api\n     */\n    Text.prototype.getOffsetX = function () {\n        return this.offsetX_;\n    };\n    /**\n     * Get the y-offset for the text.\n     * @return {number} Vertical text offset.\n     * @api\n     */\n    Text.prototype.getOffsetY = function () {\n        return this.offsetY_;\n    };\n    /**\n     * Get the fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getFill = function () {\n        return this.fill_;\n    };\n    /**\n     * Determine whether the text rotates with the map.\n     * @return {boolean|undefined} Rotate with map.\n     * @api\n     */\n    Text.prototype.getRotateWithView = function () {\n        return this.rotateWithView_;\n    };\n    /**\n     * Get the text rotation.\n     * @return {number|undefined} Rotation.\n     * @api\n     */\n    Text.prototype.getRotation = function () {\n        return this.rotation_;\n    };\n    /**\n     * Get the text scale.\n     * @return {number|import(\"../size.js\").Size|undefined} Scale.\n     * @api\n     */\n    Text.prototype.getScale = function () {\n        return this.scale_;\n    };\n    /**\n     * Get the symbolizer scale array.\n     * @return {import(\"../size.js\").Size} Scale array.\n     */\n    Text.prototype.getScaleArray = function () {\n        return this.scaleArray_;\n    };\n    /**\n     * Get the stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getStroke = function () {\n        return this.stroke_;\n    };\n    /**\n     * Get the text to be rendered.\n     * @return {string|undefined} Text.\n     * @api\n     */\n    Text.prototype.getText = function () {\n        return this.text_;\n    };\n    /**\n     * Get the text alignment.\n     * @return {string|undefined} Text align.\n     * @api\n     */\n    Text.prototype.getTextAlign = function () {\n        return this.textAlign_;\n    };\n    /**\n     * Get the text baseline.\n     * @return {string|undefined} Text baseline.\n     * @api\n     */\n    Text.prototype.getTextBaseline = function () {\n        return this.textBaseline_;\n    };\n    /**\n     * Get the background fill style for the text.\n     * @return {import(\"./Fill.js\").default} Fill style.\n     * @api\n     */\n    Text.prototype.getBackgroundFill = function () {\n        return this.backgroundFill_;\n    };\n    /**\n     * Get the background stroke style for the text.\n     * @return {import(\"./Stroke.js\").default} Stroke style.\n     * @api\n     */\n    Text.prototype.getBackgroundStroke = function () {\n        return this.backgroundStroke_;\n    };\n    /**\n     * Get the padding for the text.\n     * @return {Array<number>} Padding.\n     * @api\n     */\n    Text.prototype.getPadding = function () {\n        return this.padding_;\n    };\n    /**\n     * Set the `overflow` property.\n     *\n     * @param {boolean} overflow Let text overflow the path that it follows.\n     * @api\n     */\n    Text.prototype.setOverflow = function (overflow) {\n        this.overflow_ = overflow;\n    };\n    /**\n     * Set the font.\n     *\n     * @param {string|undefined} font Font.\n     * @api\n     */\n    Text.prototype.setFont = function (font) {\n        this.font_ = font;\n    };\n    /**\n     * Set the maximum angle between adjacent characters.\n     *\n     * @param {number} maxAngle Angle in radians.\n     * @api\n     */\n    Text.prototype.setMaxAngle = function (maxAngle) {\n        this.maxAngle_ = maxAngle;\n    };\n    /**\n     * Set the x offset.\n     *\n     * @param {number} offsetX Horizontal text offset.\n     * @api\n     */\n    Text.prototype.setOffsetX = function (offsetX) {\n        this.offsetX_ = offsetX;\n    };\n    /**\n     * Set the y offset.\n     *\n     * @param {number} offsetY Vertical text offset.\n     * @api\n     */\n    Text.prototype.setOffsetY = function (offsetY) {\n        this.offsetY_ = offsetY;\n    };\n    /**\n     * Set the text placement.\n     *\n     * @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n     * @api\n     */\n    Text.prototype.setPlacement = function (placement) {\n        this.placement_ = placement;\n    };\n    /**\n     * Set whether to rotate the text with the view.\n     *\n     * @param {boolean} rotateWithView Rotate with map.\n     * @api\n     */\n    Text.prototype.setRotateWithView = function (rotateWithView) {\n        this.rotateWithView_ = rotateWithView;\n    };\n    /**\n     * Set the fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setFill = function (fill) {\n        this.fill_ = fill;\n    };\n    /**\n     * Set the rotation.\n     *\n     * @param {number|undefined} rotation Rotation.\n     * @api\n     */\n    Text.prototype.setRotation = function (rotation) {\n        this.rotation_ = rotation;\n    };\n    /**\n     * Set the scale.\n     *\n     * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n     * @api\n     */\n    Text.prototype.setScale = function (scale) {\n        this.scale_ = scale;\n        this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n    };\n    /**\n     * Set the stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setStroke = function (stroke) {\n        this.stroke_ = stroke;\n    };\n    /**\n     * Set the text.\n     *\n     * @param {string|undefined} text Text.\n     * @api\n     */\n    Text.prototype.setText = function (text) {\n        this.text_ = text;\n    };\n    /**\n     * Set the text alignment.\n     *\n     * @param {string|undefined} textAlign Text align.\n     * @api\n     */\n    Text.prototype.setTextAlign = function (textAlign) {\n        this.textAlign_ = textAlign;\n    };\n    /**\n     * Set the text baseline.\n     *\n     * @param {string|undefined} textBaseline Text baseline.\n     * @api\n     */\n    Text.prototype.setTextBaseline = function (textBaseline) {\n        this.textBaseline_ = textBaseline;\n    };\n    /**\n     * Set the background fill.\n     *\n     * @param {import(\"./Fill.js\").default} fill Fill style.\n     * @api\n     */\n    Text.prototype.setBackgroundFill = function (fill) {\n        this.backgroundFill_ = fill;\n    };\n    /**\n     * Set the background stroke.\n     *\n     * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n     * @api\n     */\n    Text.prototype.setBackgroundStroke = function (stroke) {\n        this.backgroundStroke_ = stroke;\n    };\n    /**\n     * Set the padding (`[top, right, bottom, left]`).\n     *\n     * @param {!Array<number>} padding Padding.\n     * @api\n     */\n    Text.prototype.setPadding = function (padding) {\n        this.padding_ = padding;\n    };\n    return Text;\n}());\nexport default Text;\n//# sourceMappingURL=Text.js.map","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"vm\"},[_c('h2',{staticClass:\"h-title\"},[_vm._v(\"聚合数据\")]),_c('div',{staticClass:\"map-x\",attrs:{\"id\":\"map\"}})])}]\n\nexport { render, staticRenderFns }","/**\n * @module ol/source/Cluster\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\nimport { add as addCoordinate, scale as scaleCoordinate } from '../coordinate.js';\nimport { assert } from '../asserts.js';\nimport { buffer, createEmpty, createOrUpdateFromCoordinate, getCenter, } from '../extent.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Distance in pixels within which features will\n * be clustered together.\n * @property {number} [minDistance=0] Minimum distance in pixels between clusters.\n * Will be capped at the configured distance.\n * By default no minimum distance is guaranteed. This config can be used to avoid\n * overlapping icons. As a tradoff, the cluster feature's position will no longer be\n * the center of all its features.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underlying source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {function(Point, Array<Feature>):Feature} [createCluster]\n * Function that takes the cluster's center {@link module:ol/geom/Point} and an array\n * of {@link module:ol/Feature} included in this cluster. Must return a\n * {@link module:ol/Feature} that will be used to render. Default implementation is:\n * ```js\n * function(point, features) {\n *   return new Feature({\n *     geometry: point,\n *     features: features\n *   });\n * }\n * ```\n * @property {VectorSource} [source] Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * If the instance is disposed without also disposing the underlying\n * source `setSource(null)` has to be called to remove the listener reference\n * from the wrapped source.\n * @api\n */\nvar Cluster = /** @class */ (function (_super) {\n    __extends(Cluster, _super);\n    /**\n     * @param {Options} options Cluster options.\n     */\n    function Cluster(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @type {number|undefined}\n         * @protected\n         */\n        _this.resolution = undefined;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.distance = options.distance !== undefined ? options.distance : 20;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.minDistance = options.minDistance || 0;\n        /**\n         * @type {number}\n         * @protected\n         */\n        _this.interpolationRatio = 0;\n        /**\n         * @type {Array<Feature>}\n         * @protected\n         */\n        _this.features = [];\n        /**\n         * @param {Feature} feature Feature.\n         * @return {Point} Cluster calculation point.\n         * @protected\n         */\n        _this.geometryFunction =\n            options.geometryFunction ||\n                function (feature) {\n                    var geometry = feature.getGeometry();\n                    assert(geometry.getType() == GeometryType.POINT, 10); // The default `geometryFunction` can only handle `Point` geometries\n                    return geometry;\n                };\n        /**\n         * @type {function(Point, Array<Feature>):Feature}\n         * @private\n         */\n        _this.createCustomCluster_ = options.createCluster;\n        /**\n         * @type {VectorSource}\n         * @protected\n         */\n        _this.source = null;\n        _this.boundRefresh_ = _this.refresh.bind(_this);\n        _this.updateDistance(_this.distance, _this.minDistance);\n        _this.setSource(options.source || null);\n        return _this;\n    }\n    /**\n     * Remove all features from the source.\n     * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n     * @api\n     */\n    Cluster.prototype.clear = function (opt_fast) {\n        this.features.length = 0;\n        _super.prototype.clear.call(this, opt_fast);\n    };\n    /**\n     * Get the distance in pixels between clusters.\n     * @return {number} Distance.\n     * @api\n     */\n    Cluster.prototype.getDistance = function () {\n        return this.distance;\n    };\n    /**\n     * Get a reference to the wrapped source.\n     * @return {VectorSource} Source.\n     * @api\n     */\n    Cluster.prototype.getSource = function () {\n        return this.source;\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    Cluster.prototype.loadFeatures = function (extent, resolution, projection) {\n        this.source.loadFeatures(extent, resolution, projection);\n        if (resolution !== this.resolution) {\n            this.resolution = resolution;\n            this.refresh();\n        }\n    };\n    /**\n     * Set the distance within which features will be clusterd together.\n     * @param {number} distance The distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setDistance = function (distance) {\n        this.updateDistance(distance, this.minDistance);\n    };\n    /**\n     * Set the minimum distance between clusters. Will be capped at the\n     * configured distance.\n     * @param {number} minDistance The minimum distance in pixels.\n     * @api\n     */\n    Cluster.prototype.setMinDistance = function (minDistance) {\n        this.updateDistance(this.distance, minDistance);\n    };\n    /**\n     * The configured minimum distance between clusters.\n     * @return {number} The minimum distance in pixels.\n     * @api\n     */\n    Cluster.prototype.getMinDistance = function () {\n        return this.minDistance;\n    };\n    /**\n     * Replace the wrapped source.\n     * @param {VectorSource} source The new source for this instance.\n     * @api\n     */\n    Cluster.prototype.setSource = function (source) {\n        if (this.source) {\n            this.source.removeEventListener(EventType.CHANGE, this.boundRefresh_);\n        }\n        this.source = source;\n        if (source) {\n            source.addEventListener(EventType.CHANGE, this.boundRefresh_);\n        }\n        this.refresh();\n    };\n    /**\n     * Handle the source changing.\n     */\n    Cluster.prototype.refresh = function () {\n        this.clear();\n        this.cluster();\n        this.addFeatures(this.features);\n    };\n    /**\n     * Update the distances and refresh the source if necessary.\n     * @param {number} distance The new distance.\n     * @param {number} minDistance The new minimum distance.\n     */\n    Cluster.prototype.updateDistance = function (distance, minDistance) {\n        var ratio = distance === 0 ? 0 : Math.min(minDistance, distance) / distance;\n        var changed = distance !== this.distance || this.interpolationRatio !== ratio;\n        this.distance = distance;\n        this.minDistance = minDistance;\n        this.interpolationRatio = ratio;\n        if (changed) {\n            this.refresh();\n        }\n    };\n    /**\n     * @protected\n     */\n    Cluster.prototype.cluster = function () {\n        if (this.resolution === undefined || !this.source) {\n            return;\n        }\n        var extent = createEmpty();\n        var mapDistance = this.distance * this.resolution;\n        var features = this.source.getFeatures();\n        /** @type {Object<string, true>} */\n        var clustered = {};\n        for (var i = 0, ii = features.length; i < ii; i++) {\n            var feature = features[i];\n            if (!(getUid(feature) in clustered)) {\n                var geometry = this.geometryFunction(feature);\n                if (geometry) {\n                    var coordinates = geometry.getCoordinates();\n                    createOrUpdateFromCoordinate(coordinates, extent);\n                    buffer(extent, mapDistance, extent);\n                    var neighbors = this.source\n                        .getFeaturesInExtent(extent)\n                        .filter(function (neighbor) {\n                        var uid = getUid(neighbor);\n                        if (uid in clustered) {\n                            return false;\n                        }\n                        clustered[uid] = true;\n                        return true;\n                    });\n                    this.features.push(this.createCluster(neighbors, extent));\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<Feature>} features Features\n     * @param {import(\"../extent.js\").Extent} extent The searched extent for these features.\n     * @return {Feature} The cluster feature.\n     * @protected\n     */\n    Cluster.prototype.createCluster = function (features, extent) {\n        var centroid = [0, 0];\n        for (var i = features.length - 1; i >= 0; --i) {\n            var geometry_1 = this.geometryFunction(features[i]);\n            if (geometry_1) {\n                addCoordinate(centroid, geometry_1.getCoordinates());\n            }\n            else {\n                features.splice(i, 1);\n            }\n        }\n        scaleCoordinate(centroid, 1 / features.length);\n        var searchCenter = getCenter(extent);\n        var ratio = this.interpolationRatio;\n        var geometry = new Point([\n            centroid[0] * (1 - ratio) + searchCenter[0] * ratio,\n            centroid[1] * (1 - ratio) + searchCenter[1] * ratio,\n        ]);\n        if (this.createCustomCluster_) {\n            return this.createCustomCluster_(geometry, features);\n        }\n        else {\n            return new Feature({\n                geometry: geometry,\n                features: features,\n            });\n        }\n    };\n    return Cluster;\n}(VectorSource));\nexport default Cluster;\n//# sourceMappingURL=Cluster.js.map","<template>\r\n  <div class=\"vm\">\r\n    <h2 class=\"h-title\">聚合数据</h2>\r\n    <div id=\"map\" class=\"map-x\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport 'ol/ol.css'\r\nimport { Map, View } from 'ol'\r\nimport Tile from 'ol/layer/Tile'\r\nimport OSM from 'ol/source/OSM'\r\nimport { Style, Circle, Stroke, Fill, Text } from 'ol/style'\r\nimport layerVector from 'ol/layer/Vector'\r\nimport sourceVector from 'ol/source/Vector'\r\nimport Cluster from 'ol/source/Cluster'\r\nimport Point from 'ol/geom/Point'\r\nimport Feature from 'ol/Feature'\r\n\r\nexport default {\r\n  name: 'Polymerization',\r\n  data () {\r\n    return {\r\n      map: null\r\n    }\r\n  },\r\n  methods: {\r\n    initMap () {\r\n\r\n      let count = 20000 // 点的数量\r\n      let features = [] // 存放点要素的数组\r\n    \r\n      // 初始化每个点的坐标位置\r\n      let e = 4500000\r\n      for (let i = 0; i < count; ++i) {\r\n        let coordinates = [2 * e * Math.random() - e, 2* e * Math.random() - e]\r\n        // 根据坐标生成点状几何\r\n        features[i] = new Feature(new Point(coordinates))\r\n      }\r\n\r\n      // 把点状要素放到矢量源里\r\n      let source = new sourceVector({\r\n        features\r\n      })\r\n\r\n      let clusterSource = new Cluster({\r\n        // 通过 distance 来控制两个点聚合的间距，如果2个点的间距小于 distance 所设置的数时，就会以聚合的方式显示\r\n        distance: parseInt(40, 10),\r\n        source // 就是前面用到的矢量数据源\r\n      })\r\n      \r\n      // 点的样式\r\n      let styleCache = {}\r\n      let clusters = new layerVector({\r\n        source: clusterSource, // 源，指向上面的聚合数据源\r\n        style: feature => { // feature 是聚合后的数据，每一个 feature 代表距离小于上面设置的点状要素\r\n          let size = feature.get('features').length // features 是点状要素\r\n          let style = styleCache[size]\r\n          \r\n          if (!style) {\r\n            style = new Style({\r\n              image: new Circle({\r\n                radius: 10,\r\n                stroke: new Stroke({\r\n                  color: '#fff'\r\n                }),\r\n                fill: new Fill({\r\n                  color: '#3399cc'\r\n                })\r\n              }),\r\n              text: new Text({\r\n                text: size.toString(), // 以聚合点的数量作为显示的内容\r\n                fill: new Fill({\r\n                  color: '#fff'\r\n                })\r\n              })\r\n            })\r\n\r\n            styleCache[size] = style\r\n          }\r\n\r\n          return style\r\n        }\r\n      })\r\n\r\n      // 声明底图\r\n      let raster = new Tile({\r\n        source: new OSM()\r\n      })\r\n\r\n      this.map = new Map({\r\n        target: \"map\",\r\n        layers: [raster, clusters],\r\n        view: new View({\r\n          center: [0, 0],\r\n          zoom: 2\r\n        })\r\n      })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.initMap()\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Polymerization.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Polymerization.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Polymerization.vue?vue&type=template&id=799d6ef6&\"\nimport script from \"./Polymerization.vue?vue&type=script&lang=js&\"\nexport * from \"./Polymerization.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.sticky) result += 'y';\n  return result;\n};\n"],"sourceRoot":""}